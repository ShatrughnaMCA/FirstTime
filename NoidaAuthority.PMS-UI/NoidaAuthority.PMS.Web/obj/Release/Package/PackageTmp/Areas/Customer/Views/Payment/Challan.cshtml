@model NoidaAuthority.PMS.Entity.PaymentViewModel

@using NoidaAuthority.PMS.Common;
@using Kendo.Mvc.UI;
@using Kendo.Mvc.Extensions;
@{
    ViewBag.Title = "Challan";
    Layout = "~/Views/Shared/_CustomerLayout.cshtml";
}

<style>
    #divChallanGrid {
        display: none;
    }

    .lbl-form-control {
        /*background:#ececec;*/
        background: url(/Content/Images/boxed-bg.jpg) repeat;
    }

    .col-custom {
        width: 100%;
        float: right;
    }
    .col-md-4 {
         margin-top: 0; 
        /* width: 38.3333%; */
    }

    .alertify-notifier.ajs-bottom {
        bottom: 40px;
        color:#fff;
    }
    .k-dropdown{
        height:30px;
    }
    span.k-dropdown-wrap.k-state-default{
        height:30px;
    }
</style>

<div class="col-lg-10 col-md-12 col-sm-12 col-md-offset-0s col-lg-offset-1" id="bank-challan">
    <div class="col-md-12">
        <div class="row row-heading">
            <div class="col-md-12 divPropertyDetailHeader">
                <h4 class="inline">Challan</h4>
                <span class="pull-right RID-txt"></span>
            </div>
        </div>
    </div>
    <div class="col-md-12 blnk-rw"></div>
    <div class="col-md-12 content-top-spce">
        <div class="inr-bx" style="border:solid #e2e3e4; border-width:0 1px 1px">
            <div class="">
                <div>
                    @Html.HiddenFor(model => model.RegistrationId)
                    @Html.HiddenFor(model => model.DepartmentId)
                    @Html.HiddenFor(model => model.Department)
                    @Html.HiddenFor(model => model.SectorId)
                    @Html.HiddenFor(model => model.SectorName)
                    @Html.HiddenFor(model => model.BlockId)
                    @Html.HiddenFor(model => model.BlockName)
                    @Html.HiddenFor(model => model.PlotNo)
                    @Html.HiddenFor(model => model.PropertyNo)
                    @Html.HiddenFor(model => model.Applicant)
                    @Html.HiddenFor(model => model.ApplicantAddress)
                    @Html.HiddenFor(model => model.ApplicantType)
                    @Html.HiddenFor(model => model.ApplicantMaster)
                    @Html.HiddenFor(model => model.PropertyType)
                    @Html.HiddenFor(model => model.TotalArea)
                    @Html.HiddenFor(model => model.FloorAreaRange)
                    @Html.HiddenFor(model => model.IFSCCode)
                    @Html.HiddenFor(model => model.Amount, htmlAttributes: new { @id = "hdnAmmount" })
                    @Html.HiddenFor(model => model.AccountHeadId, htmlAttributes: new { @id = "hdnAccountHeadId" })
                    @Html.HiddenFor(model => model.AccountSubHeadId, htmlAttributes: new { @id = "hdnAccountSubHeadId" })
                </div>

                <div class="row">
                    <div class="col-md-4 col-sm-4 col-xs-12 form-group">
                        <label>Mobile No</label>
                        @Html.TextBoxFor(model => model.MobileNo, htmlAttributes: new { @class = "form-control", @maxlength = "10", style = "width:100%" })
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-12 form-group">
                        <label>Email</label>
                        @Html.TextBoxFor(model => model.Email, htmlAttributes: new { @class = "form-control", @maxlength = "50", style = "width:100%;" })
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-12 form-group">
                        <label>
                            <input type="radio" group="ref-type-group" class="" name="reference-type" value="PAN" />PAN &nbsp;&nbsp;
                            <input type="radio" group="ref-type-group" class="" name="reference-type" value="GST" />GST
                        </label>
                        @Html.TextBoxFor(model => model.ReferenceNo, htmlAttributes: new { @class = "form-control", @maxlength = "25", style = "width:100%;" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4 col-sm-4 col-xs-12 form-group">
                        @Html.Label("Bank Name", htmlAttributes: new { @class = "required" })
                        @(Html.Kendo().DropDownListFor(model => model.BankId)
                            .DataTextField("Text")
                            .DataValueField("Id")
                            .OptionLabel("---select---")
                            .Filter("contains")
                            .DataSource(source =>
                            {
                                source.Custom().ServerFiltering(true).ServerPaging(true).Type("aspnetmvc-ajax")
                                .Transport(transport => transport.Read("GetBankListAsDataSource", "Payment", new { area = "Customer" }))
                                .Schema(schema => schema.Data("Data").Total("Total"))
                                .PageSize(100);
                            })
                                //.Events(model => model.Change("CleanAccountNumber"))
                            .HtmlAttributes(new { style = "width: 100%" })
                        )
                    </div>

                    <div class="col-md-4 col-sm-4 col-xs-12 form-group">
                        @Html.Label("Branch Address", htmlAttributes: new { @class = "required" })
                        @(Html.Kendo().DropDownListFor(model => model.BranchId)
                            .DataTextField("Text")
                            .DataValueField("Id")
                            .Filter("contains")
                            .OptionLabel("---select---")
                            .DataSource(source =>
                            {
                                source.Custom().ServerFiltering(true)//.ServerPaging(true).Type("aspnetmvc-ajax")
                                .Transport(transport => transport.Read(read => read.Action("GetBranchListOfBankAsDataSource", "Payment", new { area = "Customer" }).Data("FilterBankId")))
                                .Schema(schema => schema.Data("Data").Total("Total"))
                                .PageSize(100);
                            })
                            .CascadeFrom("BankId")
                            .Events(model => model.Change("ChangeInBankBranchEvent"))
                            .HtmlAttributes(new { style = "width: 100%;" })
                        )
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-12 form-group">
                        @Html.Label("Account No", htmlAttributes: new { @id = "lblAccountddl", @class = "required" })
                        @Html.TextBoxFor(m => m.AccountNo, new { @class = "form-control", @maxlength = "20", style = "width:100%;" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4 col-sm-4 col-xs-12 form-group">
                        @Html.Label("Account Head", htmlAttributes: new { @class = "required" })
                        @(Html.Kendo().DropDownListFor(model => model.AccountHeadId)
                            .DataTextField("Text")
                            .DataValueField("Id")
                            .OptionLabel("---select---")
                            .Filter("contains")
                            .DataSource(source =>
                            {
                                source.Custom().ServerFiltering(true).ServerPaging(true).Type("aspnetmvc-ajax")
                                .Transport(transport => transport.Read("GetAccountHeadList", "Payment", new { area = "Customer" }))
                                .Schema(schema => schema.Data("Data").Total("Total"))
                                .PageSize(100);
                            })
                            .HtmlAttributes(new { style = "width: 100%;" })
                        )
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-12 form-group">
                        @Html.Label("Account Subhead", htmlAttributes: new { @class = "required" })
                        @(Html.Kendo().DropDownListFor(model => model.AccountSubHeadId)
                            .DataTextField("Text")
                            .DataValueField("Id")
                            .OptionLabel("---select---")
                            .DataSource(source =>
                            {
                                source.Custom().ServerFiltering(true)//.ServerPaging(true).Type("aspnetmvc-ajax")
                                .Transport(transport => transport.Read(read => read.Action("GetAccountSubHeadList", "Payment", new { area = "Customer" }).Data("FilterAccountHeadId")))
                                .Schema(schema => schema.Data("Data").Total("Total"))
                                .PageSize(100);
                            })
                            .CascadeFrom("AccountHeadId")
                                //.Events(model => model.Change("HideShowBranch").DataBound("onDataBound"))
                            .HtmlAttributes(new { style = "width: 100%;" })
                        )
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-12 form-group">
                        @Html.Label("Amount", htmlAttributes: new { @id = "lblAccountddl", @class = "" })
                        @(Html.Kendo().NumericTextBoxFor(m => m.Amount)
                            .Min(0).Max(999999999999999999)
                            .Spinners(false).Step(0)
                            .Enable(true)
                            .HtmlAttributes(new { style = "width: 100%;", @maxlength = "18", @class = "k-textbox  text-right" })
                        )
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12 form-group" style="text-align:right">
                        <input type="button" id="btnAdd" value="Add Amount" class="k-button" style="float:right;border-radius:0;min-width:100px;" />
                    </div>
                </div>
            </div>


            <div class="col-md-12 k-grid-content" id="divChallanGrid" style="border:1px solid #e2e3e4;">
                @(Html.Kendo().Grid<NoidaAuthority.PMS.Entity.PaymentViewModel>()
                    .Name("gridChargeDetails")
                    .Columns(columns =>
                    {
                        columns.Bound(c => c.Id).Hidden(true);
                        columns.Bound(c => c.RegistrationId).Hidden(true);
                        columns.Bound(c => c.AccountHead).Title("Account Head").ClientFooterTemplate("<div>Total Amount :-</div>");
                        columns.Bound(c => c.AccountSubHead).Title("Account Sub Head");
                        columns.Bound(c => c.Amount).Title("Amount").ClientFooterTemplate("<div><span class='fa fa-rupee'></span> #= sum #</div>");
                        columns.Bound(c => c.Id).Title("Action").ClientTemplate("<a onclick='javascript:RemoveChallanDetails(this);'class='hyperlink'>Remove</a>").Filterable(false).Sortable(false);
                        //columns.Bound(c => c.ChallanTransID).Title("Action").ClientTemplate("<a onclick='javascript:RemoveDetails(\"#=ChallanTransID#\");'class='hyperlinkcss'>Remove</a>").Filterable(false).Sortable(false);
                    })
                        .Filterable().Resizable(resize => resize.Columns(true))
                        .Events(e => e.DataBound("ChallanGridEvent"))
                        .DataSource(dataSource => dataSource
                        .Ajax().Model(model => model.Id(c => c.Id))
                        .ServerOperation(true)
                        .Read(read => read.Action("GetTempChallanChargesAsDataSource", "Payment", new { area = "Customer" }).Data("FilterRegistrationIdParam"))
                        .Aggregates(aggregates => aggregates.Add(p => p.Amount).Sum())
                        )
                )
            </div>

            <div id="div-submit-button" class="col-md-12" style="border: 1px solid #e2e3e4;padding-bottom:12px;">
                <div class="box-button text-center" style="text-align:right;padding-top:8px;">
                    <input type="button" value="Generate Challan" id="btnGenerateChallan" class="k-button" style="float:right;border-radius:0;min-width:100px;" />
                </div>
            </div>
        </div>
    </div>
</div>


<div id="divPrintChallan" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="padding-top:40px;">
    <div class="modal-dialog" style="width: 60%;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">  <b>Challan</b></h4>
            </div>
            <div class="modal-body" style="overflow:auto; height:400px;">
                <style>
                    .td-amount { padding-right: 30px; }
                    #divChallanBody { padding: 5px; }
                    #authorityChallan { border: 1px solid black; padding: 5px; }
                </style>
                <div id="divChallanBody"></div>
            </div>
            <div class="modal-footer" style="text-align: center;">
                <button type="submit" id="btnPrintDiv" class="k-button" data-dismiss="modal" onclick="PrintDiv();">Print</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#btnBack").click(function () {
            window.location.href = '@Url.Action("ManageChallan", "Authority", new { area="Member"})';
        });

        $('input[name=RegistrationType]').change(function () {
            ChangeRegistrationType();
        });

        $("#btnAdd").click(function () {
            AddChallanDetail()
        });

        $("#btnGenerateChallan").click(function () {
            //GenerateParsedChallan();
            ValidateChallanDetails();
        });

        $('#divPrintChallan').on('hidden.bs.modal', function () {
            ClearFieldValue();
            $("#AccountHeadId").data("kendoDropDownList").value("");
            $("#AccountSubHeadId").data("kendoDropDownList").value("");
            $("#Amount").data("kendoNumericTextBox").value("");
            $("#BankId").data("kendoDropDownList").value("");
            $("#gridChargeDetails").data('kendoGrid').dataSource.data([]);
        });
        ChallanGridEvent();
    });


    function ChangeInBankBranchEvent() {
        if ($('#BranchId').val() != '') {
            var bank = {
                BankId: $('#BankId').val(),
                BranchId: $('#BranchId').val(),
                FilterType: "AccountNo"
            };
            $.ajax({
                dataType: 'json',
                type: 'Post',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ model: bank }),
                url: '/Customer/Payment/GetBankAccountDetailById',
                success: function (result) {
                    if (result != null && result != '') {
                        $("#AccountNo").val(result.AccountNo);
                        $("#IFSCCode").val(result.IFSCCode);
                        return false;
                    }
                    else {
                        alertify.error("Account No is not available.");
                        return true;
                    }
                },
                error: function (ajaxRequest, strError) {
                    var respText = ajaxRequest.responseText;
                    alertify.error("Network error, Please try again later.");
                }
            });
        }
    }

    function ChallanGridEvent() {
        if ($('#gridChargeDetails').data("kendoGrid").dataSource.total() == 0) {
            $('#divChallanGrid').css("display", "none");
            $('#div-submit-button').css("display", "none");
        }
        else {
            var rid = $('#gridChargeDetails').data("kendoGrid").dataSource._data[0].RegistrationId;
            if (rid == $('#RegistrationId').val()) {
                $('#divChallanGrid').show();
                $('#div-submit-button').show();
            }
            else {
                $('#divChallanGrid').css("display", "none");
                $('#div-submit-button').css("display", "none");
            }
        }
    }

    function FilterRegistrationIdParam() {
        return {
            RegistrationId: $("#RegistrationId").val()
        }
    }

    function FilterBankId() {
        return {
            bankId: $("#BankId").val()
        };
    }
    function FilterAccountHeadId() {
        return {
            ReceiptHeadId: $("#AccountHeadId").val()
        };
    }
    function filterBankAccounts() {
        return {
            bankId: $("#BankId").val(),
            branchId: $("#BranchId").val()
        };
    }

    function AddChallanDetail() {        
        if ($("#AccountHeadId").val() == "") {
            alertify.error("Please select Account Head.");
            return false;
        }
        if ($("#AccountSubHeadId").val() == "") {
            alertify.error("Please select Sub Account Head.");
            return false;
        }
        if ($("#Amount").val() == "") {
            alertify.error("Please enter  Amount.");
            return false;
        }

        var challan = {
            RegistrationId: $("#RegistrationId").val(),
            AccountHeadId: $("#AccountHeadId").val(),
            AccountSubHeadId: $("#AccountSubHeadId").val(),
            AccountHead: $("#AccountHeadId").data("kendoDropDownList").text(),
            AccountSubHead: $("#AccountSubHeadId").data("kendoDropDownList").text(),
            Amount: $("#Amount").val()
        };
        $.ajax({
            dataType: 'json',
            type: 'Post',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({ model: challan }),
            url: '/Customer/Payment/SaveTempChallanChargeDetail',
            success: function (result) {
                if (result == '@ReturnType.Saved') {
                    $("#AccountHeadId").data("kendoDropDownList").value("");
                    $("#AccountSubHeadId").data("kendoDropDownList").value("");
                    $("#Amount").data("kendoNumericTextBox").value("");
                    $("#gridChargeDetails").data("kendoGrid").dataSource.read();
                    $("#gridChargeDetails").show();
                    alertify.success("Data saved successfully.");
                    return false;
                }
                else {
                    alertify.error("Data is not saved.");
                    return true;
                }
            },
            error: function (ajaxRequest, strError) {
                var respText = ajaxRequest.responseText;
                alertify.error("Network error, Please try again later.");
            }
        });
    }

    function RemoveChallanDetails(row) {
        var tr = $(row).parent().parent();
        var id = $(tr).children("td:eq(0)").text();
        var rid = $(tr).children("td:eq(1)").text();
        var headname = $(tr).children("td:eq(2)").text();
        var subheadname = $(tr).children("td:eq(3)").text();
        var amount = $(tr).children("td:eq(4)").text();
        var removeNotification = confirm('Are you sure to remove this details?');
        if (removeNotification) {
            var challan = {
                Id: id,
                RegistrationId: rid,
                AccountHead: headname,
                AccountSubHead: subheadname,
                Amount: amount
            };
            $.ajax({
                type: 'POST',
                data: { model: challan },
                url: '@(Url.Action("RemoveTempChallanChargeDetail", "Payment", new { area="Customer"}))',
                success: function (result) {
                    if (result == '@ReturnType.Removed') {
                        $('#gridChargeDetails').data('kendoGrid').dataSource.read();
                        //$('#gridChargeDetails').data('kendoGrid').refresh();
                        alertify.success("Charges removed successfully.");
                    }
                    else {
                        alert("Charge Detail is not removed");
                        return false;
                    }
                }
            });
        }
        else {
            return false;
        }
    }

    function ValidateChallanDetails() {
        if ($("#MobileNo").val() == "") {
            alertify.error("Please enter mobile No.");
            return false;
        }
        if ($("#BankId").val() == "") {
            alertify.error("Please select Bank.");
            return false;
        }
        if ($("#BranchId").val() == "") {
            alertify.error("Please select branch.");
            return false;
        }
        if ($("#AccountNo").val() != "") {
            if ($("#AccountNo").val().length < 6) {
                alertify.error("Please enter atleast 6 digits in Account No.");
                return false;
            }
        }

        CheckChallanSessionData();
    }



    function GenerateParsedChallan() {
        var challan = {
            RegistrationId: $("#RegistrationId").val(),
            DepartmentId: $("#DepartmentId").val(),
            Department: $("#Department").val(),
            SectorId: $("#SectorId").val(),
            SectorName: $("#SectorName").val(),
            BlockId: $("#BlockId").val(),
            BlockName: $("#BlockName").val(),
            PlotNo: $("#PlotNo").val(),
            BankId: $("#BankId").val(),
            BankName: $("#BankId").data("kendoDropDownList").text(),
            BranchId: $("#BranchId").val(),
            BranchName: $("#BranchId").data("kendoDropDownList").text(),
            MobileNo: $("#MobileNo").val(),
            Email: $("#Email").val(),
            AccountNo: $("#AccountNo").val(),
            IFSCCode: $("#IFSCCode").val(),
            Applicant: $('#Applicant').val(),
            ApplicantAddress: $("#ApplicantAddress").val(),
            PropertyType: $("#PropertyType").val(),
            //ActionType: radiobtnVal
        };
        $.ajax({
            dataType: 'json',
            type: 'Post',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({ model: challan }),
            url: '/Customer/Payment/GetGeneratedChallanById',
            success: function (result) {
                if (result.ReturnTypeId == '@ReturnType.NotExist') {
                    alertify.error("Registration Id mismatch.");
                }
                else {
                    $('#gridChargeDetails').data('kendoGrid').dataSource.read();
                    $('#gridChargeDetails').data('kendoGrid').refresh();
                    $("#divChallanBody").html(result.HTMLContent);
                    $("#divPrintChallan").modal('show');
                }
            },
            error: function (ajaxRequest, strError) {
                var respText = ajaxRequest.responseText;
                alertify.error("Network Error, please try again later.");
            }
        });
    }


    function CheckChallanSessionData() {
        var flag = false;
        if ($('#RegistrationId').val() != "") {
            var rid = $('#RegistrationId').val();
            $.ajax({
                dataType: 'json',
                type: 'Post',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ RegistrationId: rid }),
                url: '/Customer/Payment/CheckChallanSessionDataById',
                success: function (result) {
                    if (result == '@ReturnType.Exist') {
                        flag = true;
                        $('#divChallanGrid').show();
                        //$('#gridChargeDetails').data('kendoGrid').dataSource.read();
                        //$('#gridChargeDetails').data('kendoGrid').refresh();
                        GenerateParsedChallan();
                    }
                    else if (result == '@ReturnType.NotExist') {
                        $('#divChallanGrid').css("display", "none");
                        alertify.error("Add amount on this rid: " + $('#RegistrationId').val());
                    }
                    else if (result == '@ReturnType.None') {
                        $('#divChallanGrid').css("display", "none");
                    }
                },
                error: function (ajaxRequest, strError) {
                    var respText = ajaxRequest.responseText;
                    alertify.error("Network Error, please try again later.");
                }
            });
        }
        return flag;
    }


    function ToJavaScriptDate(value) {
        var pattern = /Date\(([^)]+)\)/;
        var results = pattern.exec(value);
        if (results != null) {
            var dt = new Date(parseFloat(results[1]));
            return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
        }
    }
    function PrintDiv() {
        var contents = document.getElementById("divChallanBody").innerHTML;
        var frame1 = document.createElement('iframe');
        frame1.name = "frame1";
        frame1.style.position = "absolute";
        frame1.style.top = "-1000000px";
        document.body.appendChild(frame1);
        var frameDoc = frame1.contentWindow ? frame1.contentWindow : frame1.contentDocument.document ? frame1.contentDocument.document : frame1.contentDocument;
        frameDoc.document.open();
        frameDoc.document.write('<style>.td-amount {padding-right: 30px;}#divChallanBody {padding: 5px;font-size:10pt;}#authorityChallan {border: 1px solid black;padding: 5px;} .h4-dept{margin-top:0px; margin-bottom:0px;}.h4-noida{margin-bottom:2px;}</style>');
        frameDoc.document.write('</head><body style="font-size:10pt;">');
        frameDoc.document.write(contents);
        frameDoc.document.write('</body></html>');
        frameDoc.document.close();
        setTimeout(function () {
            window.frames["frame1"].focus();
            window.frames["frame1"].print();
            document.body.removeChild(frame1);
        }, 500);
        return false;
    }

    function ClearFieldValue() {
        $("#BankId").data("kendoDropDownList").value('');
        $("#BranchId").data("kendoDropDownList").value('');
        $('#AccountNo').val('');
        $("#IFSCCode").val('');
        $("#AccountHeadId").data("kendoDropDownList").value('');
        $("#AccountSubHeadId").data("kendoDropDownList").value('');
        $("#Amount").val('');
        $("#gridChargeDetails").css("display", "none");
        //$("#gridChargeDetails").data("kendoGrid").dataSource.read();
        $('input[name=reference-type]').prop('checked', false);
        $("#ReferenceNo").val('');
    }
</script>



