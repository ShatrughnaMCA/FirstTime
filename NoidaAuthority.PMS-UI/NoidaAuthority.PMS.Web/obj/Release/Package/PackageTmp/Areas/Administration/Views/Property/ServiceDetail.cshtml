@model NoidaAuthority.PMS.Entity.ServiceRequestViewModel
@using Kendo.Mvc.UI
@using Kendo.Mvc.Extensions;
@using NoidaAuthority.PMS.Common;

@{
    ViewBag.Title = "Service Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-lg-10 col-md-12 col-sm-12 col-md-offset-0s col-lg-offset-1">
    <div class="col-md-12" style="position:static">
        <div class="row rw-spce">
            <div class="col-md-6 col-sm-6 col-xs-12"><h1 class="gridTitle">Request Detail [@Html.DisplayFor(model => model.ServiceModel.RequestStatus)]</h1></div>
            <div class="col-md-6 col-sm-6 col-xs-12 mandatory">
                <input type="button" id="btnAcknowledgement" value="Acknowledgement" class="btn btn-add" data-toggle="modal" data-target="#divAcknowledgementModal" />
            </div>
        </div>
    </div>
    <div class="col-md-12 blnk-rw"></div>
    <div class="col-md-12 content-top-spce">
        <div class="inr-bx" style="border:solid #e2e3e4; border-width:0 1px 1px">
            <h2 class="blck-heading" style="margin-bottom:5px;">Applicant Information</h2>
            <div class="form-bx">
                <div class="row" style="display:none">
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group"></div>
                    <div class="col-md-6 col-sm-6 col-xs-12 form-group" id="divRequestService">
                        <input type="radio" id="rbtnRegistered" name="RegistrationType" value="Registered" checked="checked">&nbsp;Registered &nbsp;&nbsp;
                        <input type="radio" id="rbtnUnRegistered" name="RegistrationType" value="UnRegistered" />&nbsp;UnRegistered
                        <input type="radio" id="rbtnOther" name="RegistrationType" value="Other" />&nbsp;Samadhan Diwas
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        @Html.HiddenFor(m => m.ServiceId)
                        @Html.HiddenFor(m => m.ServiceModel.RequestStatus)
                        @Html.HiddenFor(m => m.ServiceModel.RequestId)
                        @Html.HiddenFor(m => m.ServiceModel.DepartmentId)
                        @Html.HiddenFor(m => m.ServiceModel.SubDepartmentId)
                        @Html.HiddenFor(m => m.ServiceModel.ServiceId)
                        @Html.HiddenFor(m => m.ServiceModel.Sector)
                        @Html.HiddenFor(m => m.ServiceModel.Block)
                        @Html.HiddenFor(m => m.ServiceModel.PlotNo)
                    </div>
                </div>
                @Html.HiddenFor(m => m.ServiceModel.RequestStatus)
                <div class="row">
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        <label class=""> Registration Id </label>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        @Html.TextBoxFor(model => model.ServiceModel.RegistrationId, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        <label>Service Request Id</label>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        @Html.TextBoxFor(model => model.ServiceModel.Id, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        <label class=""> Property No </label>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        @Html.TextBoxFor(model => model.ServiceModel.PropertyNo, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        <label class=" ">  Department </label>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        @Html.TextBoxFor(model => model.ServiceModel.Department, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        <label class=" "> Services </label>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        @Html.TextBoxFor(model => model.ServiceModel.ServiceName, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        <label class="">Sub Department </label>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        @Html.TextBoxFor(model => model.ServiceModel.SubDepartment, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        <label class=" ">Allottee Name</label>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        @Html.TextAreaFor(model => model.ServiceModel.Applicant, htmlAttributes: new { @class = "form-control", @readonly = "readonly", style = "height: 35px;" })
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        <label class=" ">Requestor Name </label>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        @Html.TextAreaFor(model => model.ServiceModel.Requestor, htmlAttributes: new { @class = "form-control", @readonly = "readonly", style = "height: 35px;" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        <label class=" "> Allottee Address </label>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        @Html.TextAreaFor(model => model.ServiceModel.ApplicantAddress, htmlAttributes: new { @class = "form-control", @readonly = "readonly", style = "height: 35px;" })
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        <label class=" "> Requestor Address </label>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        @Html.TextAreaFor(model => model.ServiceModel.RequestorAddress, htmlAttributes: new { @class = "form-control", @readonly = "readonly", style = "height: 35px;" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        <label class=" "> Mobile No </label>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        @Html.TextBoxFor(model => model.ServiceModel.MobileNo, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        <label class="">  Email ID </label>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                        @Html.TextBoxFor(model => model.ServiceModel.Email, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>


                <div id="div-extension">
                    @{Html.RenderPartial("_ExtensionRequest");}
                </div>

                <div id="div-transfer">
                    @{Html.RenderPartial("_TransferRequest");}
                </div>

                <div id="div-cic">
                    @{Html.RenderPartial("_CICRequest");}
                </div>

                <div id="div-mortgage">
                    @{Html.RenderPartial("_MortgageRequest");}
                </div>

                <div id="div-mutation">
                    @{Html.RenderPartial("_MutationRequest");}
                </div>

                <div id="div-gpa">
                    @{Html.RenderPartial("_GPARequest");}
                </div>

                <div id="div-rent">
                    @{Html.RenderPartial("_RentRequest");}
                </div>

                <div class="row" id="divDescription">
                    <div class="col-md-3 col-sm-12 col-xs-12 form-group">
                        <label>Description</label>
                    </div>
                    <div class="col-md-9 col-sm-12 col-xs-12 form-group">
                        @Html.TextAreaFor(model => model.ServiceModel.Description, htmlAttributes: new { @class = "form-control", @readonly = "readonly", style = "height: 35px;" })
                    </div>
                </div>


                @*@using (Html.BeginForm("UploadDocument", "ServiceRequest", FormMethod.Post, new { id = "ServiceRequestForm", name = "ServiceRequestForm", enctype = "multipart/form-data" }))
                    {
                        @Html.HiddenFor(m => m.ServiceModel.RequestId)
                        <div class="row checklist">
                            <div class="col-md-12" style="background: #61c7d1;">
                                <div class="col-md-6 col-sm-12 col-xs-12 form-group" style="margin:5px 0 5px 0;"><p style="margin:0px;color:#000">Please attach relevant documents for required Services.</p></div>
                                <div class="col-md-6 col-sm-12 col-xs-12 form-group" style="margin:5px 0 5px 0;"><input type="file" class="single k-upload" name="files" /> </div>
                                <div class="col-md-6 col-sm-12 col-xs-12 form-group" style="margin:5px 0 5px 0;"><input type="submit" class="btn btn-add" id="btnSubmit" value="Upload Files" /> </div>
                            </div>
                        </div>
                    }*@

                <div class="row" style="padding-left:30px;">
                    <div class="col-md-12 k-grid-content">
                        @(Html.Kendo().Grid<NoidaAuthority.PMS.Entity.DocumentViewModel>()
                        .Name("gridDocs")
                        .Columns(columns =>
                        {
                            columns.Bound(c => c.Id).Title("S.No.").Width(60).ClientTemplate("# if (DocumentName != null) {#<a onclick='javascript:OpenDocument(this);' class='hyperlink'>#=Id#</a>#}else {#<span>#=Id#</span>#} #").Filterable(false);
                            columns.Bound(c => c.DocumentName).Title("Document Uploaded");
                            columns.Bound(c => c.DocumentPath).Hidden(true);
                        })
                        .Resizable(resize => resize.Columns(true))
                        .AutoBind(true)
                        .DataSource(dataSource => dataSource
                                .Ajax().ServerOperation(true)
                                .Model(model => model.Id(c => c.Id))
                                .Read(read => read.Action("GetServiceRequestDocuments", "Property", new { Area = "Administration" }).Data("FilterRequestId"))
                        )
                        .Events(e => e.DataBound("dataBound"))
                        )
                    </div>

                </div>

            </div>
        </div>
        <div class="box-button text-center">
            @*<input type="button" id="btnBack" value="Back" class="btn btn-add" onclick="window.history.back()" />*@
            <input type="button" id="btnUpdateStatus" value="Update Status" class="btn btn-add" data-toggle="modal" data-target="#divUpdateStatus" />
        </div>
    </div>
</div>

<div id="divAcknowledgementModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="padding-top:40px;" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog" style="width: 60%">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">  <b>Service Request Acknowledgement</b></h4>
            </div>
            <div class="modal-body" id="divAcknowledgementReceiptBody" style="overflow:auto;height:420px;">
                <div class="row">
                    <div class="col-md-12">
                        <h2 style="text-align:center;padding:0;margin-bottom:4px;">NEW OKHLA INDUSTRIAL DEVELOPMENT AUTHORITY</h2>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <h4 style="text-align:center;padding:0;margin-bottom:4px;">Sector-6 Administrator Office, NOIDA</h4>
                    </div>
                </div>
                <div class="row ">
                    <div class="col-md-12">
                        <h5 style="text-align:center;padding:0;margin-top:4px;">Samadhan Diwas - Acknowledgement Receipt</h5>
                    </div>
                </div>
                <div class="row rw-pad">
                    <div class="col-md-12">
                        <span style="width:50%;text-align:right;float:right"> <b>Date: @DateTime.Now.ToString("dd-MMM-yyyy")</b></span>
                    </div>
                </div>
                <div class="row rw-pad">
                    <div class="col-md-12">
                        <span style="width:70%;float:left"><b> Acknowledgement No: &nbsp;SD-@Model.ServiceModel.RequestId</b></span>
                        @{
                            if (Model.ServiceModel.RegistrationNo != null && Model.ServiceModel.RegistrationNo != "")
                            {
                                <span style="width:30%;text-align:right;float:right"><b> Registration No: &nbsp;@Model.ServiceModel.RegistrationNo</b></span>
                            }
                        }
                        @*<span style="width:50%;text-align:right;float:right"><b> Registration No: &nbsp;@Model.ServiceModel.RegistrationId</b></span>*@
                    </div>
                </div>
                <div class="row rw-pad">
                    <div class="col-md-12">
                        <span style="width:70%;float:left"><b> Applicant Name: &nbsp;@Model.ServiceModel.Applicant</b></span>
                        <span style="width:30%;text-align:right;float:right"><b>Property No: &nbsp;@Model.ServiceModel.PropertyNo</b></span>
                    </div>
                </div>
                <div class="row rw-pad">
                    <div class="col-md-12">
                        <span style="width:70%;float:left"><b> Department: &nbsp;@Model.ServiceModel.Department</b> &nbsp;&nbsp;( @Model.ServiceModel.SubDepartment )</span>
                        <span style="width:30%;text-align:right;float:right"><b>Mobile No.: &nbsp;@Model.ServiceModel.MobileNo</b></span>
                    </div>
                </div>
                <div class="row rw-pad">
                    <div class="col-md-12">
                        @{
                            <b> Request Type: &nbsp;@Model.ServiceModel.ServiceName</b>
                        }
                    </div>
                </div>
                <div class="row rw-pad">
                    <div class="col-md-12">
                        @{
                            <b> Subject: &nbsp;<label id="lblDescription">@Model.ServiceModel.Description</label> </b>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12" style="text-align:justify;text-justify:inter-word">
                        <p>
                            <b> Note:</b> The information provided in application shall be validated against the available information with the department.
                            In case where addition information like payment info addition supporting document etc.is required, the same shall be communicated on registered
                            mobile number and mail You can also track the status of service request on <b> http://www.mynoida.in </b>,Please quote this service request number for any
                            communication regarding the application.
                        </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <b>
                            Thanks for using services online.<br />
                            Your Thankfully<br />
                            NOIDA
                        </b>
                    </div>
                </div>
            </div>
            <div style="page-break-after: always;"></div>
            <div class="modal-footer" style="text-align: center;">
                <button type="submit" id="btnPrintDiv" class="k-button" onclick="PrintDiv();">Print</button>
                <button type="submit" id="btnNext" class="k-button" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="divUpdateStatus" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="padding-top:40px;" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog" style="width: 60%">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">  <b>Update Status</b></h4>
            </div>@using (Html.BeginForm("UpdateStatus", "ServiceRequest", FormMethod.Post, new { id = "ServiceRequestForm", name = "ServiceRequestForm", enctype = "multipart/form-data" }))
            {
                <div class="modal-body" id="" style="overflow:auto;height:auto;">
                    <div class="row">

                        @Html.HiddenFor(m => m.ServiceModel.RequestId)
                        <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                            <label class=" required">Request Status </label>
                        </div>
                        <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                            @(Html.Kendo().DropDownListFor(model => model.ServiceModel.ServiceStatusId)
                                .DataTextField("text")
                                .DataValueField("id")
                                .DataSource(dataSource => dataSource.Read(read => read.Action("GetStatusList", "Property", new { area="Administration"})))
                                .HtmlAttributes(new { style = "width:100%;" })
                            )
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                            <label class=" required"> Previous Comment </label>
                        </div>
                        <div class="col-md-6  form-group">
                            @Html.TextAreaFor(m => m.ServiceModel.Comment, htmlAttributes: new { @class = "form-control", @Readonly = "readonly" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                            <label class=" required"> Add Comment </label>
                        </div>
                        <div class="col-md-6 form-group" style="background: #61c7d1;">
                            @Html.TextAreaFor(m => m.ServiceModel.Comment, htmlAttributes: new { @class = "form-control", @maxlength = "400" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12" style="background: #61c7d1;">
                            <div class="col-md-6 col-sm-12 col-xs-12 form-group" style="margin:5px 0 5px 0;"><p style="margin:0px;color:#000">Please attach relevant documents for required Services.</p></div>
                            <div class="col-md-6 col-sm-12 col-xs-12 form-group" style="margin:5px 0 5px 0;"><input type="file" class="lettersingle k-upload" name="letterfiles" /> </div>
                        </div>
                    </div>
                </div>
                <div style="page-break-after: always;"></div>
                <div class="modal-footer" style="">
                    <button type="submit" id="btnUStatus" class="k-button">Update Status</button>
                    <button type="button" id="btnNext" class="k-button" data-dismiss="modal">Close</button>
                </div>
            }
        </div>
    </div>
</div>

<div id="divDocumentView" style="overflow:hidden">
    <div class="row">
        <div class="col-md-12 no-margin no-padding" id="divPageView" style="overflow:hidden">
            <iframe id="ifrmViewPdf"></iframe>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        //$(".k-grid-content").hide();
        //$(".checklist").hide();
        var rStatus = $("#ServiceModel_RequestStatus").val();
        if (rStatus == "Completed" || rStatus == "Complete On The Spot") { $("#btnUpdateStatus").attr("disabled", true); }

        $('#divDocumentView').kendoWindow({
            modal: true,
            title: "Document",
            visible: false,
            position: {
                top: 60, // or "100px"
                left: "15%"
            },
            width: "70%", height: "80%"
        });


        $("#btnSubmit").click(function () {
            var files = $(".single");
            if (CheckFileToUpload()) {
                if (CheckFileSize(files)) {
                    $("#btnSubmit").submit();
                    return true;
                } else { return false; }
            } else { return false; }

        });

        ChangeService();
    });


    $("#btnUStatus").click(function () {

        var sAddComment = $("#ServiceModel_AddComment").val();
        var sServiceModelRequestStatus = $("#ServiceModel_Request_Status").val();

        //if (sServiceModelRequestStatus == "5") {
        //    alertify.error("Request is already in inprogress state.");
        //    return false;
        //}

        if (sAddComment == "") {
            alertify.error("please enter comment.");
            return false;
        }

        var files = $(".lettersingle");
        if (files.length > 0) {
            for (i = 0; i < files.length; i++) {
                if (files[i].value.trim() != "") {
                    if (CheckFileSize(files)) {
                        $("#btnUStatus").submit();
                    } else {
                        return false;
                    }
                }
            }
        }
    });

    function dataBound(e) {
        var grid = $("#gridDocs").data("kendoGrid");

        var rowCount = grid.dataSource.total();
        if (rowCount == 0) {
            $(".k-grid-content").hide();
            $(".checklist").show();
        } else {
            $(".k-grid-content").show();
            $(".checklist").hide();
        }
    }

    function FilterRequestId() {
        return { RequestId: $("#ServiceModel_RequestId").val() }
    }

    function PrintDiv() {
        var contents = document.getElementById("divAcknowledgementReceiptBody").innerHTML;
        var frame1 = document.createElement('iframe');
        frame1.name = "frame1";
        frame1.style.position = "absolute";
        frame1.style.top = "-1000000px";
        document.body.appendChild(frame1);
        var frameDoc = frame1.contentWindow ? frame1.contentWindow : frame1.contentDocument.document ? frame1.contentDocument.document : frame1.contentDocument;
        frameDoc.document.open();
        frameDoc.document.write('<html><head><title></title>');
        frameDoc.document.write('</head><body>');
        frameDoc.document.write(contents);
        frameDoc.document.write('</body></html>');
        frameDoc.document.close();
        setTimeout(function () {
            window.frames["frame1"].focus();
            window.frames["frame1"].print();
            document.body.removeChild(frame1);
        }, 500);
        return false;
    }

    function OpenDocument(row) {
        $("#divDocumentView").empty();
        var tr = $(row).parent().parent();
        var link = $(tr).children("td:eq(2)").text();
        $("#divDocumentView").append($('<iframe src=' + link + ' style="width:900px;height:500px;overflow:hidden;"></iframe>'));
        $("#divDocumentView").data("kendoWindow").center();
        $("#divDocumentView").data("kendoWindow").open();
        $("#divDocumentView").data("kendoWindow").pin();
    }





    function ChangeService() {
        var id = $('#ServiceModel_ServiceId').val();
        if (id == '@NAServiceId.Extension') {
            $('#div-extension').show();
            $('#div-transfer').css("display", "none");
            $('#div-mortgage').css("display", "none");
            $('#div-mutation').css("display", "none");
            $('#div-cic').css("display", "none");
            $('#div-gpa').css("display", "none");
            $('#div-rent').css("display", "none");
        }
        else if (id == '@NAServiceId.Transfer') {
            $('#div-extension').css("display", "none");
            $('#div-transfer').show();
            $('#div-mortgage').css("display", "none");
            $('#div-mutation').css("display", "none");
            $('#div-cic').css("display", "none");
            $('#div-gpa').css("display", "none");
            $('#div-rent').css("display", "none");
        }
        else if (id == '@NAServiceId.CIC') {
            $('#div-extension').css("display", "none");
            $('#div-transfer').css("display", "none");
            $('#div-mortgage').css("display", "none");
            $('#div-mutation').css("display", "none");
            $('#div-cic').show();
            $('#div-gpa').css("display", "none");
            $('#div-rent').css("display", "none");
        }
        else if (id == '@NAServiceId.Mortgage') {
            $('#div-extension').css("display", "none");
            $('#div-transfer').css("display", "none");
            $('#div-mortgage').show();
            $('#div-mutation').css("display", "none");
            $('#div-cic').css("display", "none");
            $('#div-gpa').css("display", "none");
            $('#div-rent').css("display", "none");
        }
        else if (id == '@NAServiceId.Mutation') {
            $('#div-extension').css("display", "none");
            $('#div-transfer').css("display", "none");
            $('#div-mortgage').css("display", "none");
            $('#div-mutation').show();
            $('#div-cic').css("display", "none");
            $('#div-gpa').css("display", "none");
            $('#div-rent').css("display", "none");
        }
        else if (id == '@NAServiceId.Rent') {
            $('#div-extension').css("display", "none");
            $('#div-transfer').css("display", "none");
            $('#div-mortgage').css("display", "none");
            $('#div-mutation').css("display", "none");
            $('#div-cic').css("display", "none");
            $('#div-gpa').css("display", "none");
            $('#div-rent').show();
        }
        else if (id == '@NAServiceId.GPA') {
            $('#div-extension').css("display", "none");
            $('#div-transfer').css("display", "none");
            $('#div-mortgage').css("display", "none");
            $('#div-mutation').css("display", "none");
            $('#div-cic').css("display", "none");
            $('#div-gpa').show();
            $('#div-rent').css("display", "none");
        }
        else {
            $('#div-extension').css("display", "none");
            $('#div-transfer').css("display", "none");
            $('#div-mortgage').css("display", "none");
            $('#div-mutation').css("display", "none");
            $('#div-cic').css("display", "none");
            $('#div-gpa').css("display", "none");
            $('#div-rent').css("display", "none");
        }
        //GetFileUploadOption();
    }


    function CheckFileToUpload() {
        flag = false;
        var files = $(".single");
        if ($(".single").length > 0) {
            for (i = 0; i < $(".single").length; i++) {
                if ($(".single")[i].value.trim() == "") {
                    alertify.alert("Upload Documents", "Please Upload All the Documents");
                    return flag = false;
                }
                else {
                    flag = true;
                }
            }
            return flag;
        }
        else {
            alertify.alert("Upload Documents", "No file found to upload.");
            return flag = false;
        }
    }

    function CheckFileSize(FileUpload) {
        flag = false;
        var files = FileUpload;//$(".single");
        if ($(".single").length > 0) {
            var errorMessage = "";
            for (i = 0; i < files.length; i++) {
                var FileNoCount = i + 1;
                if (files[i].value.trim() != "") {
                    var size = (files[i].files[0].size / 1024);
                    var FileName = files[i].files[0].name;
                    var extension = files[i].value.substr((files[i].value.lastIndexOf('.') + 1));
                    if (extension.toLowerCase() == "pdf" || extension.toLowerCase() == "jpg" || extension.toLowerCase() == "jpeg") {
                        flag = true;
                    }
                    else {
                        alertify.error(FileNoCount + " " + FileName + " not allowed.");
                        return flag = false;;
                    }

                    if (size < 10) {
                        alertify.error(FileNoCount + " " + FileName + " Min 10kb file size is allowed");
                        return flag = false;;
                    }
                    if (size / 1024 > 5) {
                        alertify.error(FileNoCount + " " + FileName + " Max 5Mb file size is allowed");
                        return flag = false;;
                    }
                }
                else {
                    alertify.error("Please upload documents.");
                    return flag = false;;
                }
            }
        }
        else {
            alertify.alert("Upload Documents", "No file found to upload.");
            return flag;
        }
        return flag;
    }
</script>


