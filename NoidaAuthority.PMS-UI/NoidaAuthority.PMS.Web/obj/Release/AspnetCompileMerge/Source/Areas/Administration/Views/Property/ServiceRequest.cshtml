@model NoidaAuthority.PMS.Entity.ServiceRequestViewModel
@using Kendo.Mvc.UI;
@using Kendo.Mvc.Extensions;
@using NoidaAuthority.PMS.Common;
@using Newtonsoft.Json;

@{
    ViewBag.Title = "Service Request";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .k-textbox {
        width: 100%;
    }

    #div-extension {
        display: none;
    }

    #div-transfer {
        display: none;
    }

    #div-mortgage {
        display: none;
    }

    #div-mutation {
        display: none;
    }

    #div-gpa {
        display: none;
    }

    #div-rent {
        display: none;
    }

    #div-cic {
        display: none;
    }

    #AcknowledgementContent{
        display:none;
    }

    .row-border {
        border: solid #e2e3e4;
        border-width: 0 0px 1px 0px;
    }

    .row.file-header {
        background: #56afff;
        padding-top: 6px;
    }

    .col-lbl-sn > label {
        padding-left: 30px;
    }

    .row-file {
        padding-top: 4px;
        padding-bottom: 4px;
        /*background-color:#d5d5d5;*/
        background-color: #fff;
    }

        .row-file:nth-child(2n+1) {
            /*padding-top:6px;*/
            /*background-color:#d5d5d5;*/
            background-color: #f1f1f1;
        }

    .signle {
        padding-top: 2px;
    }
</style>

@using (Html.BeginForm("ServiceRequest", "Property", FormMethod.Post, new { id = "ServiceRequestForm", name = "ServiceRequestForm", enctype = "multipart/form-data" }))
{
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="col-md-12" style="padding:0 10px 0px;">
            <div class="col-md-12 divPropertyDetailHeader" style="margin-bottom:5px;">
                <h4 class="inline">Request Service </h4>
                <span class="pull-right RID-txt mandatory">Fields marked with an asterisk (<label class="star">*</label>) are required.</span>
            </div>
        </div>

        <div class="col-md-12">
            <div>
                @Html.HiddenFor(model => model.RegistrationType)
                @Html.HiddenFor(model => model.ServiceModel.RegistrationType)
                @Html.HiddenFor(model => model.ServiceModel.Department)
                @Html.HiddenFor(model => model.ServiceModel.SubDepartment)
                @Html.HiddenFor(model => model.ServiceModel.ServiceName)
            </div>
            <div class="row">
                @*<h4 class="blck-heading" style="margin-bottom:5px;">Applicant Information</h4>*@
            </div>
            <div class="row">
                <div class="col-md-3 col-sm-3 col-xs-12 form-group"></div>
                <div class="col-md-6 col-sm-6 col-xs-12 form-group" id="divRequestService">
                    <input type="radio" name="RegistrationType" id="rbtnRegistered" value="Registered" checked="checked">&nbsp;<b>Registered</b> &nbsp;&nbsp;
                    <input type="radio" name="RegistrationType" id="rbtnUnRegistered" value="UnRegistered" />&nbsp;<b>UnRegistered</b>
                    <input type="radio" name="RegistrationType" id="rbtnOther" value="Other" />&nbsp;&nbsp;<b>Pradhikaran Diwas</b>
                </div>
                <div class="col-md-3 col-sm-3 col-xs-12 form-group"></div>
            </div>
            <div class="row">
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                    <label class=""> Registration Id: </label>
                </div>
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                    @Html.TextBoxFor(model => model.ServiceModel.RegistrationId, htmlAttributes: new { @class = "k-textbox", @maxlength = "8", onkeypress = "return IsNumeric(event);" })
                </div>
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">

                </div>
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">

                </div>
            </div>
            <div class="row">
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                    <label class=""> Sector/Block/Plot No: </label>
                </div>
                <div class="col-md-1 col-sm-1 col-xs-12 form-group">
                    @Html.TextBoxFor(model => model.ServiceModel.Sector, htmlAttributes: new { @class = "k-textbox", @maxlength = "4" })
                </div>
                <div class="col-md-1 col-sm-1 col-xs-12 form-group">
                    @Html.TextBoxFor(model => model.ServiceModel.Block, htmlAttributes: new { @class = "k-textbox", @maxlength = "4" })
                </div>
                <div class="col-md-1 col-sm-1 col-xs-12 form-group">
                    @Html.TextBoxFor(model => model.ServiceModel.PlotNo, htmlAttributes: new { @class = "k-textbox", @maxlength = "10" })
                </div>

                <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                    <label class=" required">  Department: </label>
                </div>
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                    @(Html.Kendo().DropDownListFor(model => model.ServiceModel.DepartmentId)
                                .DataTextField("Text")
                                .DataValueField("Id")
                                .OptionLabel("---select---")
                                .DataSource(dataSource => dataSource.Read(read => read.Action("GetDepartmentList", "Property", new { area = "Administration" })))
                                .HtmlAttributes(new { style = "width:100%;" })
                    )
                </div>
            </div>
            <div class="row">
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                    <label class=" required"> Services: </label>
                </div>
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                    @(Html.Kendo().DropDownListFor(model => model.ServiceModel.ServiceId)
                                .DataTextField("Text")
                                .DataValueField("Id")
                                .OptionLabel("---select---")
                                .DataSource(dataSource => dataSource
                                .Read(read => read.Action("GetServiceListByDepartment", "Property", new { area = "Administration" }).Data("FilterDepartment")).ServerFiltering(true)
                                )
                                .CascadeFrom("ServiceModel_DepartmentId")
                                .HtmlAttributes(new { style = "width:100%;" })
                                .Events(e => e.Change("ChangeService"))
                    )
                </div>
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                    <label class="">Sub Department: </label>
                </div>
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                    @(Html.Kendo().DropDownListFor(model => model.ServiceModel.SubDepartmentId)
                                .DataTextField("Text")
                                .DataValueField("Id")
                                .DataSource(dataSource => dataSource.Read(read => read.Action("GetSubDepartmentList", "Property", new { area = "Administration" }).Data("FilterDepartment")).ServerFiltering(true))
                                .CascadeFrom("ServiceModel_DepartmentId")
                                .HtmlAttributes(new { style = "width:100%;" })
                    )
                </div>
            </div>
            <div class="row">
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                    <label class=" required">Requestor Name:</label>
                </div>
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                    @Html.TextAreaFor(model => model.ServiceModel.Applicant, htmlAttributes: new { @class = "k-textbox", @maxlength = "200" })
                </div>
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                    <label class=" required"> Requestor Address: </label>
                </div>
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                    @Html.TextAreaFor(model => model.ServiceModel.ApplicantAddress, htmlAttributes: new { @class = "k-textbox", @maxlength = "1800" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                    <label class=" required"> Mobile No: </label>
                </div>
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                    @Html.TextBoxFor(model => model.ServiceModel.MobileNo, htmlAttributes: new { @class = "k-textbox", @maxlength = "10", onkeypress = "return IsNumeric(event);" })
                </div>
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                    <label class="">  Email ID: </label>
                </div>
                <div class="col-md-3 col-sm-3 col-xs-12 form-group">
                    @Html.TextBoxFor(model => model.ServiceModel.Email, htmlAttributes: new { @class = "k-textbox", @maxlength = "50" })
                </div>
            </div>


            <div id="div-extension">
                @{Html.RenderPartial("_ExtensionRequest");}
            </div>

            <div id="div-transfer">
                @{Html.RenderPartial("_TransferRequest");}
            </div>

            <div id="div-cic">
                @{Html.RenderPartial("_CICRequest");}
            </div>

            <div id="div-mortgage">
                @{Html.RenderPartial("_MortgageRequest");}
            </div>

            <div id="div-mutation">
                @{Html.RenderPartial("_MutationRequest");}
            </div>

            <div id="div-gpa">
                @{Html.RenderPartial("_GPARequest");}
            </div>

            <div id="div-rent">
                @{Html.RenderPartial("_RentRequest");}
            </div>

            <div class="row" id="divDescription">
                <div class="col-md-3 col-sm-12 col-xs-12 form-group">
                    <label>Description:</label>
                </div>
                <div class="col-md-9 col-sm-12 col-xs-12 form-group">
                    @Html.TextAreaFor(model => model.ServiceModel.Description, htmlAttributes: new { @class = "k-textbox", @maxlength = "499" })
                </div>
            </div>
        </div>

        <div class="col-md-12">
            <div class="row" id="file-option">

            </div>
        </div>

        <div class="col-md-12">
            <div class="box-button text-center">
                <input type="button" id="btnBack" value="Back" class="btn btn-add" />
                <input type="button" id="btnSubmit2" value="Submit" class="btn btn-add" />
            </div>
        </div>

    </div>
}

<div>
    @{Html.RenderPartial("_AcknowledgementSlip");}
</div>

<script type="text/javascript">

    var specialKeys = new Array();
    specialKeys.push(8); //Backspace
    function IsNumeric(e) {
        var keyCode = e.which ? e.which : e.keyCode
        var ret = ((keyCode >= 48 && keyCode <= 57) || specialKeys.indexOf(keyCode) != -1);
        if (ret == false)
            return false;
    }

    $(document).ready(function () {
        var flag = false;
        ChangeRegistrationType();

        $('#ServiceRequestForm input:radio[name=RegistrationType]').on('change', function () {
            ChangeRegistrationType();
        });

        $("input[type='text'][name='ServiceModel.RegistrationId']").on('change', function () {
            GetPropertyDetailsForRegisteredType();
        });

        $("input[type='text'][name='ServiceModel.RegistrationId']").on('blur', function () {
            GetPropertyDetailsForRegisteredType();
        });

        $('#btnSubmit2').click(function () {
            debugger;
            var serviceid = $('#ServiceModel_ServiceId').val();
            var flag = ValidateBasicFields();
            if (serviceid == '@NAServiceId.Transfer' && flag == true) {
                SaveTransferRequest();
            }
            else if (serviceid == '@NAServiceId.Rent' && flag == true) {
                SaveRentRequest();
            }
            else if (serviceid == '@NAServiceId.CIC' && flag == true) {
                SaveCICRequest();
            }
            else if (serviceid == '@NAServiceId.Mortgage' && flag == true) {
                SaveMortgageRequest();
            }
            else if (serviceid == '@NAServiceId.Mutation' && flag == true) {
                SaveMutationRequest();
            }
            else if (serviceid == '@NAServiceId.GPA' && flag == true) {
                SaveGPARequest();
            }
            else if (serviceid == '@NAServiceId.Extension' && flag == true) {
                SaveExtensionRequest();
            }
            else if ((serviceid == '@NAServiceId.Other' || serviceid > 21) && flag == true) {
                SubmitServiceRequestForm();
            }
            else if (flag == true) {
                SubmitServiceRequestForm();
            }
        });


        $('#btnBack').click(function () {
            //window.location.href = "/Member/ServiceRequest/ManageServiceRequest";
        });

        $('.single').bind("change", function () {
            CheckFileSize();
        });

    });

    function FilterDepartment() {
        return { departmentId: $('#ServiceModel_DepartmentId').val() };
    }

    function ChangeRegistrationType() {
        var radiobtnVal = $('input[name=RegistrationType]:checked', '#ServiceRequestForm').val();
        if (radiobtnVal == '@NAConstant.UnRegistered' || radiobtnVal == '@NAConstant.Other') {
            ClearFields();
            $('#ServiceModel_Applicant').attr("readonly", false)
            $('#ServiceModel_ApplicantAddress').attr("readonly", false);
            $('#ServiceModel_Sector').attr("readonly", false);
            $('#ServiceModel_Block').attr("readonly", false);
            $('#ServiceModel_PlotNo').attr("readonly", false);
            //SetDepartment();
        }
        else if (radiobtnVal == "@NAConstant.Registered") {
            ClearFields();
            $('#ServiceModel_Applicant').attr("readonly", "readonly");
            $('#ServiceModel_ApplicantAddress').attr("readonly", "readonly");
            $('#ServiceModel_Sector').attr("readonly", "readonly");
            $('#ServiceModel_Block').attr("readonly", "readonly");
            $('#ServiceModel_PlotNo').attr("readonly", "readonly");
            $('#ServiceModel_DepartmentId').empty();

            GetPropertyDetailsForRegisteredType();
        }
    }


    function ChangeService() {
        var id = $('#ServiceModel_ServiceId').val();
        if (id == '@NAServiceId.Extension') {
            $('#div-extension').show();
            $('#div-transfer').css("display", "none");
            $('#div-mortgage').css("display", "none");
            $('#div-mutation').css("display", "none");
            $('#div-cic').css("display", "none");
            $('#div-gpa').css("display", "none");
            $('#div-rent').css("display", "none");
        }
        else if (id == '@NAServiceId.Transfer') {
            $('#div-extension').css("display", "none");
            $('#div-transfer').show();
            $('#div-mortgage').css("display", "none");
            $('#div-mutation').css("display", "none");
            $('#div-cic').css("display", "none");
            $('#div-gpa').css("display", "none");
            $('#div-rent').css("display", "none");
        }
        else if (id == '@NAServiceId.CIC') {
            $('#div-extension').css("display", "none");
            $('#div-transfer').css("display", "none");
            $('#div-mortgage').css("display", "none");
            $('#div-mutation').css("display", "none");
            $('#div-cic').show();
            $('#div-gpa').css("display", "none");
            $('#div-rent').css("display", "none");
        }
        else if (id == '@NAServiceId.Mortgage') {
            $('#div-extension').css("display", "none");
            $('#div-transfer').css("display", "none");
            $('#div-mortgage').show();
            $('#div-mutation').css("display", "none");
            $('#div-cic').css("display", "none");
            $('#div-gpa').css("display", "none");
            $('#div-rent').css("display", "none");
        }
        else if (id == '@NAServiceId.Mutation') {
            $('#div-extension').css("display", "none");
            $('#div-transfer').css("display", "none");
            $('#div-mortgage').css("display", "none");
            $('#div-mutation').show();
            $('#div-cic').css("display", "none");
            $('#div-gpa').css("display", "none");
            $('#div-rent').css("display", "none");
        }
        else if (id == '@NAServiceId.Rent') {
            $('#div-extension').css("display", "none");
            $('#div-transfer').css("display", "none");
            $('#div-mortgage').css("display", "none");
            $('#div-mutation').css("display", "none");
            $('#div-cic').css("display", "none");
            $('#div-gpa').css("display", "none");
            $('#div-rent').show();
        }
        else if (id == '@NAServiceId.GPA') {
            $('#div-extension').css("display", "none");
            $('#div-transfer').css("display", "none");
            $('#div-mortgage').css("display", "none");
            $('#div-mutation').css("display", "none");
            $('#div-cic').css("display", "none");
            $('#div-gpa').show();
            $('#div-rent').css("display", "none");
        }
        else {
            $('#div-extension').css("display", "none");
            $('#div-transfer').css("display", "none");
            $('#div-mortgage').css("display", "none");
            $('#div-mutation').css("display", "none");
            $('#div-cic').css("display", "none");
            $('#div-gpa').css("display", "none");
            $('#div-rent').css("display", "none");
        }
        GetFileUploadOption();
    }

    function GetFileUploadOption() {
        $.ajax({
            dataType: 'json',
            type: 'Post',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({ departmentId: $('#ServiceModel_DepartmentId').val(), serviceId: $('#ServiceModel_ServiceId').val() }),
            url: '/Administration/Property/GetFileUploadOptionsForService',
            success: function (result) {
                if (result != "NotExist") {
                    $('#file-option').html(result);
                    $('#file-option').show();
                }
                else {
                    $('#file-option').css("display", "none");
                    $('#file-option').html("");
                }
            },
            error: function (ajaxRequest, strError) {
                //alert(ajaxRequest.responseText);
            }
        });
    }

    function GetPropertyDetailsForRegisteredType() {
        var radiobtnVal = $('input[name=RegistrationType]:checked', '#ServiceRequestForm').val();
        var rid = $("input[type='text'][name='ServiceModel.RegistrationId']").val();
        if (radiobtnVal == "@NAConstant.Registered" && rid != "") {
            $.ajax({
                dataType: 'json',
                type: 'Post',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ registrationId: rid }),
                url: '/Administration/Property/GetApplicantDetailsByRegistrationId',
                success: function (result) {
                    if (result != null) {
                        $("input[type='text'][name='ServiceModel.Sector']").val(result.Sector);
                        $("input[type='text'][name='ServiceModel.Block']").val(result.Block);
                        $("input[type='text'][name='ServiceModel.PlotNo']").val(result.PlotNo);
                        $("input[type='text'][name='ServiceModel.Department']").val(result.Department);
                        $("input[type='text'][name='ServiceModel.MobileNo']").val(result.Mobile);
                        $("input[type='text'][name='ServiceModel.Email']").val(result.Email);
                        $("textarea[name='ServiceModel.Applicant']").val(result.Applicant);
                        $("textarea[name='ServiceModel.ApplicantAddress']").val(result.CorrespondAddress);
                        $("#ServiceModel_DepartmentId").data("kendoDropDownList").value(result.DepartmentId);
                    }
                    else {
                        alertify.error("Allottee doesn't exist");
                    }
                },
                error: function (ajaxRequest, strError) {
                    //alert(ajaxRequest.responseText);
                    alertify.error("Network error");
                }
            });
        }

    }

    function SubmitServiceRequestForm() {
        debugger;
        var radiobtnVal = $('input[name=RegistrationType]:checked', '#divRequestService').val();
        var department = $('#ServiceModel_DepartmentId').data("kendoDropDownList").text();
        var sub_department = $('#ServiceModel_SubDepartmentId').data("kendoDropDownList").text();
        var service = $('#ServiceModel_ServiceId').data("kendoDropDownList").text();
        $('#ServiceModel_RegistrationType').val(radiobtnVal);
        $('#ServiceModel_Department').val(department);
        $('#ServiceModel_SubDepartment').val(sub_department);
        $('#ServiceModel_ServiceName').val(service);

        var formData = new FormData($('form').get(0));
        $.ajax({
            dataType: 'json',
            type: 'Post',
            contentType: false, // Not to set any content header
            processData: false, // Not to process data
            data: formData,
            url: '/Administration/Property/ServiceRequest',
            success: function (result) {
                //value set for acknowledgement slip
                $('#CreatedDate').text(ToJavaScriptDate(result.ServiceModel.CreatedDate));
                $('#ServiceRequestId').text(result.ServiceModel.Id);
                $('#RegistrationNo').text(result.ServiceModel.RegistrationId != null ? "Registration Id: " + result.ServiceModel.RegistrationId : "");
                $('#Name').text(result.ServiceModel.Applicant);
                $('#PropertyNo').text(result.ServiceModel.PropertyNo);
                $('#DepartmentName').text(result.ServiceModel.Department);
                $('#SubDepartment').text(result.ServiceModel.SubDepartment);
                $('#Mobile').text(result.ServiceModel.MobileNo);
                $('#ServiceName').text(result.ServiceModel.ServiceName);
                $('#lblDescription').text(result.ServiceModel.Description);
                //var win = $(".popup-window").data("kendoWindow");
                $(".popup-window").data("kendoWindow").center();
                $(".popup-window").data("kendoWindow").open();
                //ClearFields();
            },
            error: function (ajaxRequest, strError) {
                alertify.error("Network error, try again later");
            }
        });
    }



    function ValidateBasicFields() {
        var vflag = true;
        var mobile = $('#ServiceModel_MobileNo').val();
        var mail = $('#ServiceModel_Email').val();

        if ($('#ServiceModel_Sector').val() == '') {
            alertify.error("Please enter Sector.");
            vflag = false;
        }
        else if ($('#ServiceModel_Block').val() == '') {
            alertify.error("Please enter Block.");
            vflag = false;
        }
        else if ($('#ServiceModel_PlotNo').val() == '') {
            alertify.error("Please enter Plot No.");
            vflag = false;
        }
        else if ($("#ServiceModel_DepartmentId").val() == '') {
            alertify.error("Please select Department.");
            vflag = false;
        }
        else if ($("#ServiceModel_ServiceId").val() == '') {
            alertify.error("Please select Service.");
            vflag = false;
        }
        else if ($("#ServiceModel_SubDepartmentId").val() == '') {
            vflag = false;
        }
        else if ($('#ServiceModel_Applicant').val() == '') {
            alertify.error("Please enter Allottee name.");
            vflag = false;
        }
        else if ($('#ServiceModel_ApplicantAddress').val() == '') {
            alertify.error("Please enter Allottee address.");
            vflag = false;
        }
        else if (mobile.length < 10 || mobile == null) {
            alertify.error("Please enter a valid Mobile No.");
            vflag = false;
        }
        else if (mobile.length != "") {
            if (isNaN(mobile)) {
                $('#ServiceModel_MobileNo').val('');
                vflag = false;
            }
        }
        else if (mail != '') {
            if (/^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(mail) == false) {
                alertify.error("Please enter a valid Email");
                vflag = false;
            }
        }
        return vflag;
    }

    function ClearFields() {
        $('#ServiceModel_RegistrationId').val('');
        $('#ServiceModel_Sector').val('');
        $('#ServiceModel_Block').val('');
        $('#ServiceModel_PlotNo').val('');
        $('#ServiceModel_MobileNo').val('');
        $('#ServiceModel_Email').val('');
        $('#ServiceModel_Applicant').val('');
        $('#ServiceModel_ApplicantAddress').val('');
        $('#ServiceModel_Description').val('');
        $("#ServiceModel_DepartmentId").data("kendoDropDownList").value('');
    }


    function CheckFileToUpload() {
        flag = false;
        var files = $(".single");
        if ($(".single").length > 0) {
            for (i = 0; i < $(".single").length; i++) {
                if ($(".single")[i].value.trim() == "") {
                    alertify.alert("Upload Documents", "Please Upload All the Documents");
                    return flag = false;
                }
                else {
                    flag = true;
                }
            }
            return flag;
        }
        else {
            alertify.alert("Upload Documents", "No file found to upload.");
            return flag = false;
        }
    }

    function CheckFileSize() {
        flag = false;
        var files = $(".single");
        if ($(".single").length > 0) {
            var errorMessage = "";
            for (i = 0; i < $(".single").length; i++) {
                var FileNoCount = i + 1;
                if ($(".single")[i].value.trim() != "") {
                    var size = ($(".single")[i].files[0].size / 1024);
                    var FileName = $(".single")[i].files[0].name;
                    var extension = $(".single")[i].value.substr(($(".single")[i].value.lastIndexOf('.') + 1));
                    if (extension.toLowerCase() == "pdf" || extension.toLowerCase() == "jpg" || extension.toLowerCase() == "jpeg") {
                        flag = true;
                    }
                    else {
                        alertify.error(FileNoCount + " " + FileName + " not allowed.");
                        return flag = false;;
                    }

                    if (size < 10) {
                        alertify.error(FileNoCount + " " + FileName + " Min 10kb file size is allowed");
                        return flag = false;;
                    }
                    if (size / 1024 > 5) {
                        alertify.error(FileNoCount + " " + FileName + " Max 5Mb file size is allowed");
                        $(".single").val('');
                        return flag = false;;
                    }
                }
                else {
                    alertify.error("Please upload documents.");
                    return flag = false;;
                }
            }
        }
        else {
            alertify.alert("Upload Documents", "No file found to upload.");
            return flag;
        }
        return flag;
    }




</script>



