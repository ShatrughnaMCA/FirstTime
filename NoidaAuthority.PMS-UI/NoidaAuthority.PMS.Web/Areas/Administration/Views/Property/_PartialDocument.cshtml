@model NoidaAuthority.PMS.Web.Models.PropertyDetail
@using Kendo.Mvc.UI;
@using NoidaAuthority.PMS.Entity;

<style>
    .k-grid-content{
        overflow-y:hidden;
    }
</style>

@*<div class="row">
        <div class="col-md-12">
            <h4 class="header-title">Attachment Details</h4>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 form-group">
            <div data-role="droptarget" class="k-grouping-header">Drag a column header and drop it here to group by that column</div>
            <div style="display:none" id="AttachmentDetails"> </div>
            <div id="DocumentDetails"> </div>
        </div>
    </div>

<div class="row">
    @(Html.Kendo().Window().Visible(false)
        .Name("IDWindow")
        .Title("Document")
        .Modal(true)
        .Content(@<text><div style="width:100%" id="windowDiv"><iframe id="ifrmViewPdf" style="width:800px; height:500px;"></iframe></div></text>)
        .Actions(actions => actions.Close())
    )
</div>*@

<div class="container-content">
    <div class="col-md-12">
        <ul class="nav nav-tabs content-tabs" id="ulProperty" role="tablist">
            <li class="active"><a href="#doc-tab-one" role="tab" data-toggle="tab">Scanned</a></li>
            <li class="doc-02"><a href="#doc-tab-two" role="tab" data-toggle="tab">Generated</a></li>
        </ul>
    </div>

    <div class="col-md-12 tabbable tab-content" id="divProperty" style="padding:0;">
        <div class="row tab-pane fade in active" id="doc-tab-one">
            <div class="col-md-12 k-grid-content">
                @(Html.Kendo().Grid<NoidaAuthority.PMS.Entity.DocumentViewModel>()
                        .Name("gridDocumentScanned")
                        .Columns(columns =>
                        {
                            columns.Bound(c => c.SerialNo).Title("Serial No").Width(120);
                            //columns.Bound(c => c.RegistrationId).Title("Registration Id").Width(150);
                            columns.Bound(c => c.DocumentName).Title("Document");//.Width(80);
                            columns.Bound(c => c.DocumentPath).Title("Action").Width(150).ClientTemplate("<a style = 'cursor:pointer;' onclick=javascript:OpenDocument(this);>Click Here</a>").Filterable(false);
                            columns.Bound(c => c.DocumentPath).Hidden(true);
                            //columns.Bound(c => c.DepositDate).Title("Deposit Date").Format("{0:dd/MM/yyyy}").Width(120);

                        })
                        .Sortable().Filterable().Resizable(resize => resize.Columns(true))
                        .Pageable(pageable => pageable.Enabled(true).Refresh(true).PageSizes(true))
                        .DataSource
                        (
                            dataSource => dataSource
                            .Ajax().ServerOperation(true)
                            .Model(model => model.Id(p => p.Id))
                            .Read(read => read.Action("GetScannedDocumentListById", "Property", new { area = "Customer" }).Data("AdditionalInfoD")).PageSize(10)
                        )
                )
            </div>
        </div>

        <div class="row tab-pane fade" id="doc-tab-two">
            <div class="col-md-12 k-grid-content">
                @(Html.Kendo().Grid<NoidaAuthority.PMS.Entity.DocumentViewModel>()
                        .Name("gridDocumentGenerated")
                        .Columns(columns =>
                        {
                            columns.Bound(c => c.Id).Hidden(true);
                            //columns.Bound(c => c.SerialNo).Title("Serial No").Width(120);
                            columns.Bound(c => c.RegistrationId).Title("Registration Id").Width(150);
                            //columns.Bound(c => c.DocumentName).Title("Receipt Head");//.Width(80);
                            columns.Bound(c => c.Template).Title("Document");//.Width(80);
                            //columns.Bound(c => c.DepositDate).Title("Deposit Date").Format("{0:dd/MM/yyyy}").Width(120);
                            columns.Bound(o => o.Barcode).Width(210).Title("Barcode").ClientTemplate("<label class='hyperlink' onclick='javascript:OpenLetterWindow(this)'>#= Barcode #</label>");
                            columns.Bound(o => o.DocumentContent).Hidden(true);
                        })
                        .Sortable().Filterable().Resizable(resize => resize.Columns(true))
                        .Pageable(pageable => pageable.Enabled(true).Refresh(true).PageSizes(true))
                        .DataSource
                        (
                            dataSource => dataSource
                            .Ajax().ServerOperation(true)
                            .Model(model => model.Id(p => p.Id))
                            .Read(read => read.Action("GetGeneratedDocumentListById", "Property", new { area = "Customer" }).Data("AdditionalInfoD2")).PageSize(10)
                        )
                )
            </div>
        </div>
    </div>
</div>

<div class="col-md-12 popup-window" id="DocumentWindow" style="min-height:450px;">
    <div class="row form-group" id="divLetterContent" style="height:450px; overflow:auto;">

    </div>
    <div class="row">
        <div class="col-md-12" style="text-align:center">
            <button type="button" class="k-button" onclick="PrintLetter();" style="width:100px;">Print</button>
            <button type="button" class="k-button" onclick="CloseLetter();" style="width:100px;">Close</button>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        var RegistrationID = $("div#div-propertydetail").data("registrationid");
        $("div#DocumentDetails").kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: "/Administration/Property/GetDocumentDetails/" + RegistrationID
                },
                pageSize: 5
            },
            dataBound: function () {
                DisplayNoResultsFound($('#DocumentDetails'));
            },
            sortable: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            columns: [
                        { title: 'Document Name', field: 'DocumentName' },
                        { field: 'PathName', hidden: true },
                        { title: 'Document', field: 'PathName', template: '<a onclick="javascript:OpenFile(this);" class="view-docs" >Click Here</a>' }
            ],
            noRecords: true,
        });

        $("div#AttachmentDetails").kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: "/Administration/Property/GetPropertyAttachmentDetails/" + RegistrationID
                },
                pageSize: 5
            },
            dataBound: function () {
                DisplayNoResultsFound($('#AttachmentDetails'));
            },
            sortable: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            columns: [
                        { title: 'Document Name', field: 'DocumentName' },
                        { title: 'Document', field: 'PathName', template: '<a href="#=PathName#" target="_blank">Click Here</a>' }
            ],
            noRecords: true,
        });

        $("div#PropertyDocumentsGrid").kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: "/Administration/Property/GetPropertyDocuments/" + RegistrationID
                },
                pageSize: 5
            },
            //height: 250,
            //filterable: true,
            //groupable: true,
            sortable: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            columns: [
                        { title: 'Name', field: 'Name' },
                        { title: 'Document Link', field: 'Url', template: '<a href="#=Url#" target="_blank">Click Here</a>' },
            ]
        });


        $('.popup-window').kendoWindow({
            modal: true,
            title: "Noida Authority Letter",
            //actions: false,
            actions: ["Pin", "Minimize", "Maximize", "Close"],
            visible: false,
            width: "75%"
        });
    });

    function AdditionalInfoD() {
        return { RegistrationId: $('#RegistrationId').val() }
    }

    function AdditionalInfoD2() {
        return { RegistrationId: $('#RegistrationId').val() }
    }

    function OpenFile(row) {
        $("#windowDiv").empty();
        var tr = $(row).parent().parent();
        var link = $(tr).children("td:eq(1)").text();
        $("#windowDiv").append($('<iframe src=' + link + ' style="width:800px; height:500px;"></iframe>'));
        $("#IDWindow").data("kendoWindow").center();
        $("#IDWindow").data("kendoWindow").open();
    }

    function OpenDocument(row) {
        $("#divLetterContent").empty();
        var tr = $(row).parent().parent();
        var link = $(tr).children("td:eq(3)").text();
        $("#divLetterContent").append($('<iframe src=' + link + ' style="width:100%;min-height:450px;"></iframe>'));
        $("#DocumentWindow").data("kendoWindow").center();
        $("#DocumentWindow").data("kendoWindow").open();
    }

    function OpenLetterWindow(row) {
        $("#divLetterContent").empty();
        var tr = $(row).parent().parent();
        var content = $(tr).children("td:eq(4)").text();
        $("#divLetterContent").html(content);
        //$("#divPrintChallan").modal('show');

        $(".popup-window").data("kendoWindow").open();
        $(".popup-window").data("kendoWindow").center();
    }

    function CloseLetter() {
        $(".popup-window").data("kendoWindow").close();
    }

    function PrintLetter() {
        var contents = document.getElementById("divLetterContent").innerHTML;
        var frame1 = document.createElement('iframe');
        frame1.name = "frame1";
        frame1.style.position = "absolute";
        frame1.style.top = "-1000000px";
        document.body.appendChild(frame1);
        var frameDoc = frame1.contentWindow ? frame1.contentWindow : frame1.contentDocument.document ? frame1.contentDocument.document : frame1.contentDocument;
        frameDoc.document.open();
        frameDoc.document.write('<html><head><title></title>');
        frameDoc.document.write('<style>.row-btn{display:none;}</style>');
        frameDoc.document.write('</head><body>');
        frameDoc.document.write(contents);
        frameDoc.document.write('</body></html>');
        frameDoc.document.close();
        setTimeout(function () {
            window.frames["frame1"].focus();
            window.frames["frame1"].print();
            document.body.removeChild(frame1);
        }, 500);
        return false;
    }

</script>
