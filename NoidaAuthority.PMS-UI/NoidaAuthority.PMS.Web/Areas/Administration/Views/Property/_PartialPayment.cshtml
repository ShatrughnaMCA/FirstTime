@model NoidaAuthority.PMS.Web.Models.PropertyDetail
@using Kendo.Mvc.UI;
@using NoidaAuthority.PMS.Entity;

<style>
    .k-grid-content{
        overflow-y:hidden;
    }
</style>

@*<div id="sp-pay-detail">
    <div class="row">
        <div class="col-md-12">
            <h4 class="header-title">Payment Schedule</h4>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 form-group" style=" vertical-align:top; width:100%">
            @{
                if (!string.IsNullOrEmpty(Model.TransferCase))
                {
                    <div data-role="droptarget" class="k-grouping-header">Drag a column header and drop it here to group by that column</div>
                    <div id="PaymentScheduleGrid"></div>
                }
            }
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <h4 class="header-title">Payment Details</h4>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 form-group" style="vertical-align:top; width:100%">
            @{
                if (!string.IsNullOrEmpty(Model.TransferCase))
                {
                    <div data-role="droptarget" class="k-grouping-header">Drag a column header and drop it here to group by that column</div>
                    <div id="PaymentDetailGrid"></div>
                }
            }
        </div>
    </div>

    <div class="row">
        <div class="col-md-12" id="propertiesHighCourt">
        </div>
    </div>
</div>*@


<div class="row">
    <div class="col-md-12 content-border" style="padding:0;">
        <div class="col-md-12">
            <ul class="nav nav-tabs content-tabs" id="ulProperty" role="tablist">
                <li class="active"><a href="#pay-tab-one" role="tab" data-toggle="tab">Payment History</a></li>
                <li class="tab-002"><a href="#pay-tab-two" role="tab" data-toggle="tab">Payment Schedule</a></li>
                <li class="tab-004"><a href="#pay-tab-four" role="tab" data-toggle="tab">Account Ledger</a></li>
                <li class="tab-005"><a href="#pay-tab-five" role="tab" data-toggle="tab">Lease Rent</a></li>
                <li class="tab-006"><a href="#pay-tab-six" role="tab" data-toggle="tab">Installment Dues</a></li>
                <li class="tab-007"><a href="#pay-tab-seven" role="tab" data-toggle="tab">NDC</a></li>
            </ul>
        </div>

        <div class="col-md-12 tabbable tab-content" id="divProperty" style="padding:0;">
            <div class="row tab-pane fade in active" id="pay-tab-one">
                <div class="col-md-12 k-grid-content" style="overflow-y:hidden;">
                    @*<h2 class="grid-title">Payment History</h2>*@
                    @(Html.Kendo().Grid<NoidaAuthority.PMS.Entity.PaymentViewModel>()
                        .Name("gridPaymentReceipt")
                        .Columns(columns =>
                        {
                            columns.Bound(c => c.ReceiptId).Title("Receipt No").Width(140);
                            columns.Bound(c => c.ChallanId).Title("Challan No").Width(140);
                            columns.Bound(c => c.ReceiptHeadName).Title("Receipt Head");//.Width(80);
                            columns.Bound(c => c.ReceiptSubHeadName).Title("Receipt Sub Head");//.Width(80);
                            columns.Bound(c => c.DepositDate).Title("Deposit Date").Format("{0:dd-MMM-yyyy}").Width(130);
                            columns.Bound(c => c.PaidAmount).Title("Amount Paid").Width(130);
                        })
                        .Sortable()
                        .Filterable()
                        .Resizable(resize => resize.Columns(true))
                        .Pageable(pageable => pageable.Enabled(true).Refresh(true).PageSizes(true))
                        .DataSource
                        (
                            dataSource => dataSource
                            .Ajax()
                            .Model(model => model.Id(p => p.Id))
                            .ServerOperation(true).Sort(s => s.Add(r => r.DepositDate).Descending())
                            .Read(read => read.Action("GetPaymentReceiptScheduleListById", "Property", new { area = "Customer" }).Data("AdditionalInfo"))
                            .PageSize(10)
                        )
                    )
                </div>
            </div>

            <div class="row tab-pane fade" id="pay-tab-two">
                <div class="col-md-12 k-grid-content">
                    @(Html.Kendo().Grid<NoidaAuthority.PMS.Entity.PaymentViewModel>()
                       .Name("gridPaymentSchedule")
                      .Columns(columns =>
                      {
                          columns.Bound(c => c.InstallmentNo).Title("Installment No").Width(80);
                          columns.Bound(c => c.InstallmentDueDate).Format("{0:dd-MMM-yyyy}").Title("Due Date").Width(80);
                          columns.Bound(c => c.InstallmentAmount).Title("Installment Amount").Width(80);
                          columns.Bound(c => c.InstallmentInterest).Title("Installment Interest").Width(80);
                          columns.Bound(c => c.BalanceAmount).Title("Balance Amount").Width(80);
                          columns.Bound(c => c.PrincipalAmount).Title("Principal Amount").Width(80);
                      })
                      .Sortable()
                      .Filterable()
                      .Resizable(resize => resize.Columns(true))
                      .Pageable(pageable => pageable.Enabled(true).Refresh(true).PageSizes(true))
                      .DataSource
                      (
                          dataSource => dataSource
                            .Ajax()
                            .Model(model => model.Id(p => p.Id))
                            .ServerOperation(true)
                            .Read(read => read.Action("GetPaymentScheduleDataListById", "Property", new { area = "Customer" }).Data("AdditionalInfo1"))
                            .PageSize(10)
                      )
                    )
                </div>
            </div>

            <div class="row tab-pane fade" id="three">
                <div class="col-md-12 k-grid-content" id="hdnRescheduleGrid">
                    @*<h2 class="grid-title">Payment Reschedule</h2>*@
                    @(Html.Kendo().Grid<NoidaAuthority.PMS.Entity.PaymentViewModel>()
                        .Name("gridPaymentReschedule")
                        .Columns(columns =>
                        {
                            columns.Bound(c => c.InstallmentNo).Title("Number of Installment").Width(80);
                            columns.Bound(c => c.InstallmentDueDate).Format("{0:dd-MMM-yyyy}").Title("Installment Due Date").Width(80);
                            columns.Bound(c => c.InstallmentAmount).Title("Principal Installment Amount").Width(80);
                            columns.Bound(c => c.InstallmentAmount).Title("Interest Installment Amount").Width(80);
                            columns.Bound(c => c.BalanceAmount).Title("Total Installment Amount").Width(80);
                            columns.Bound(c => c.PrincipalAmount).Title("Balance Principal Amount").Width(80);
                        })
                        .Sortable()
                        .Filterable()
                        .Resizable(resize => resize.Columns(true))
                        .Pageable(pageable => pageable.Enabled(true).Refresh(true).PageSizes(true))
                        .DataSource
                        (
                            dataSource => dataSource
                            .Ajax()
                            .Model(model => model.Id(p => p.Id))
                            .ServerOperation(true)
                                //.Read(read => read.Action("GetPaymentRescheduledListById", "Property", new { area = "Customer" }).Data("AdditionalInfo"))
                            .Read(read => read.Action("GetPaymentScheduleDataListById", "Property", new { area = "Customer" }).Data("AdditionalInfo1"))
                            .PageSize(10)
                        )
                    )
                </div>
            </div>

            <div class="row tab-pane fade" id="pay-tab-four">
                <div class="col-md-12 k-grid-content">
                    @*<h2 class="grid-title">Account Ledger Book</h2>*@
                    @(Html.Kendo().Grid<NoidaAuthority.PMS.Entity.PaymentViewModel>()
                        .Name("gridPaymentLedger")
                        .Columns(columns =>
                        {
                            columns.Bound(c => c.EntryDate).Title("Transaction Date").Format("{0:dd-MM-yyyy}");
                            columns.Bound(c => c.ReceiptSubHeadName).Title("Account Name");
                            columns.Bound(c => c.DebitAmount).Title("Debit Amount");
                            columns.Bound(c => c.CreditAmount).Title("Credit Amount");
                            columns.Bound(c => c.BalanceAmount).Title("Balance Amount");
                        })
                        .Sortable()
                        .Filterable()
                        .Resizable(resize => resize.Columns(true))
                        .Pageable(pageable => pageable.Enabled(true).Refresh(true).PageSizes(true))
                        .AutoBind(true)
                        .DataSource
                        (
                            dataSource => dataSource
                            .Ajax().Model(model => model.Id(p => p.Id))
                            .ServerOperation(true)
                            .Read(read => read.Action("GetPaymentLedgerDataListById", "Property", new { area = "Customer" }).Data("AdditionalInfo1"))
                            .PageSize(10)
                        )
                    )
                </div>
            </div>

            <div class="row tab-pane fade" id="pay-tab-five">
                <div class="col-md-12 k-grid-content">
                    @*<h2 class="grid-title">Account Ledger Book</h2>*@
                    @(Html.Kendo().Grid<NoidaAuthority.PMS.Entity.PaymentViewModel>()
                .Name("GridLeaseRentDues")
                .Columns(columns =>
                {
                    columns.Bound(c => c.Id).Title("Id").Width(50).Hidden(true);
                    //columns.Bound(c => c.RegistrationId).Title("Registasdasration Id").ClientTemplate("<a href='" + "/Property/PropertyAllotment/PropertyDetails/#= RegistrationId #'>#= RegistrationId #</a>").Filterable(true);
                    //columns.Bound(c => c.PropertyNo).Title("Property");
                    columns.Bound(c => c.LeaseRentPremium).Title("Lease Rent Premium");
                    columns.Bound(c => c.PaidUptoDate).Title("Lease Rent Paid Upto").Format("{0:dd-MMM-yyyy}");
                    columns.Bound(c => c.LeaseRentDues).Title("Lease Rent Dues").ClientTemplate("<label class='hyperlink' onclick='ShowLeaseRentDetail(#=Id#)'>#= LeaseRentDues #</label>");
                    columns.Bound(c => c.DuesUptoDate).Title("Lease Rent Dues Upto").Format("{0:dd-MMM-yyyy}");
                    //columns.Bound(c => c.RegistrationId).Title("Demand Note").Width(140).ClientTemplate(" <center><a onclick='javascript:PrintDemandNote(#=RegistrationId#,#=LeaseRentDues#);'><span class='fa fa-print'></span></a></center> ");
                    //columns.Bound(c => c.LeaseRentDues).Title("Lease Rent Dues").ClientTemplate("<label class='hyperlinkcss' onclick='ShowLeaseRentDetail(#=Id#)'>view</label>");
                })
                .Sortable()
                .Filterable()
                .Resizable(resize => resize.Columns(true))
                .Pageable(pageable => pageable.Enabled(true).Refresh(true).PageSizes(true))
                .DataSource(dataSource => dataSource
                        .Ajax()
                        .Model(model => model.Id(p => p.Id))
                        .ServerOperation(true)
                        .Read(read => read.Action("GetMultiplePaymentStatusList", "Property", new { area = "Customer" }).Data("LeaseRent")).PageSize(10)
                        .Aggregates(aggregates => aggregates.Add(p => p.LeaseRentPremium).Sum())
                        .Aggregates(aggregates => aggregates.Add(p => p.LeaseRentDues).Sum())

                    )
                    )
                </div>
            </div>

            <div class="row tab-pane fade" id="pay-tab-six">
                <div class="col-md-12 k-grid-content">
                    @(Html.Kendo().Grid<NoidaAuthority.PMS.Entity.PaymentViewModel>()
                        .Name("gridInstallmentDues")
                        .Columns(columns =>
                        {
                            columns.Bound(c => c.StartDate).Title("Installment Start Date").Format("{0:dd-MM-yyyy}");
                            columns.Bound(c => c.EndDate).Title("Installment End Date");
                            columns.Bound(c => c.DuesAmount).Title("Dues Amount");
                            columns.Bound(c => c.DuesUptoDate).Title("Dues Upto Date");
                            columns.Bound(c => c.BalanceAmount).Title("Current Balance Amount");
                            columns.Bound(c => c.BalanceUptoDate).Title("Balance Up to Date");
                        })
                        .Sortable()
                        .Filterable()
                        .Resizable(resize => resize.Columns(true))
                        .Pageable(pageable => pageable.Enabled(true).Refresh(true).PageSizes(true))
                        .AutoBind(true)
                        .DataSource
                        (
                            dataSource => dataSource
                            .Ajax().Model(model => model.Id(p => p.Id))
                            .ServerOperation(true)
                            .Read(read => read.Action("GetInstallmentPaymentDues", "Property", new { area = "Customer" }).Data("AdditionalInfo"))
                            .PageSize(10)
                        )
                    )
                </div>
            </div>

            <div class="row tab-pane fade" id="pay-tab-seven">
                <div class="col-md-12 k-grid-content">
                    @(Html.Kendo().Grid<NoidaAuthority.PMS.Entity.PaymentViewModel>()
                        .Name("gridNDC")
                        .Columns(columns =>
                        {
                            columns.Bound(c => c.IsTotalPremiumPaid).Title("Total Premium Paid");
                            columns.Bound(c => c.IsOneTimeLeasePaid).Title("One Time Lease Rent Paid");
                            columns.Bound(c => c.NDCDate).Title("NDC Date").Format("{0:dd-MM-yyyy}");
                            //columns.Bound(c => c.IsLeaseRentPaid).Title("Is Rent Paid").ClientTemplate("#if(IsLeaseRentPaid=='No'){#<span>#=LeaseRentUpto#</span>#}else{#<span></span>#}#");
                        })
                        .Sortable()
                        .Filterable()
                        .Resizable(resize => resize.Columns(true))
                        .Pageable(pageable => pageable.Enabled(true).Refresh(true).PageSizes(true))
                        .AutoBind(true)
                        .DataSource
                        (
                            dataSource => dataSource
                            .Ajax().Model(model => model.Id(p => p.Id))
                            .ServerOperation(true)
                            .Read(read => read.Action("GetNDCDetails", "Property", new { area = "Customer" }).Data("AdditionalInfo"))
                            .PageSize(10)
                        )
                    )
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
     var RegistrationID = $("div#div-propertydetail").data("registrationid");
        $("div#PaymentScheduleGrid").kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: "/Administration/Property/GetPaymentSchedule/" + RegistrationID
                },
                pageSize: 5
            },
            dataBound: function () {
                DisplayNoResultsFound($('#PaymentScheduleGrid'));
            },
            //height: 250,
            //filterable: true,
            //groupable: true,
            sortable: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            columns: [
                        //{ title: 'PropertyNo', field: 'PropertyNo' },
                        { title: 'Payment Due Date', field: 'paymentScheduleDate', type: "date", format: "{0:dd-MMM-yyyy}" },
                        { title: 'Principal Amt(&#8377)', field: 'ScheduleAmount', format: "{0:#,0.00}" },
                        { title: 'Interest Amt(&#8377)', field: 'ScheduleAmount', format: "{0:#,0.00}" },
                        { title: 'Payment Status', field: 'PaymentStatus', template: '#=Getstatus(PaymentStatus)#' }]
        });

        $("div#PaymentDetailGrid").kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: "/Administration/Property/GetPaymentDetails/" + RegistrationID
                },
                pageSize: 5
            },
            dataBound: function () {
                DisplayNoResultsFound($('#PaymentDetailGrid'));
            },
            //height: 250,
            //filterable: true,
            //groupable: true,
            sortable: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            columns: [
                        //{ title: 'PropertyNo', field: 'PropertyNo' },
                        { title: 'Receiving Date', field: 'DepositDate', type: "date", format: "{0:dd-MMM-yyyy}" },
                        { title: 'Receiving Amt(&#8377)', field: 'AmountPaid', format: "{0:#,0.00}" },
                         { title: 'Receipt No.', field: 'ChallanId' },
                       { title: 'Receipt Head.', field: 'ReceiptHead' },
            ]
        });


        //$("div#PaymentHistoryGrid").kendoGrid({
        //    dataSource: {
        //        type: "json",
        //        transport: {
        //            read: "/Property/GetPropertyPaymentHistory/" + RegistrationID
        //        },
        //        pageSize: 5
        //    },
        //    //height: 250,
        //    //filterable: true,
        //    //groupable: true,
        //    sortable: true,
        //    pageable: {
        //        refresh: true,
        //        pageSizes: true,
        //        buttonCount: 5
        //    },
        //    columns: [
        //            { title: 'Amount Paid(&#8377)', field: 'AmountPaid', format: "{0:#,0.00}" },
        //            { title: 'Depositor Name', field: 'DepositorName' },
        //            { title: 'Deposit Date', field: 'DepositDate', type: "date", format: "{0:dd-MMM-yyyy}" },
        //             { title: 'Head', field: 'ReceiptHead' },
        //            { title: 'Bank', field: 'BankId' },
        //            { title: 'Challan ID', field: 'ChallanId' }
        //    ]
        //});
    });



    function AdditionalInfo1() {
        return {
            rid: $('#RegistrationId').val()
        }
    }

    function AdditionalInfo() {
        return {
            RegistrationId: $('#RegistrationId').val()
        }
    }

    function LeaseRent() {
        return {
            RegistrationId: $('#RegistrationId').val()
        }
    }
</script>
