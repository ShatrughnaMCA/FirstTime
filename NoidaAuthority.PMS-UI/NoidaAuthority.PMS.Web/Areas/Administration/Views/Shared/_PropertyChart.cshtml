@using NoidaAuthority.PMS.Common;


<div id="div-property-chart">
    <h5 class="chrt_title">Allocation By Property Type</h5>
    <div class="btn-group new_btn_bx" id="div-property-sector-dropdown" data-value="0" style="">
        <div class="property-sector-list"></div>
        &nbsp;<a class="icn_zoom" data-toggle="modal" data-target="#propertychartByTypeDivModal" href="#"><img title="Zoom In" src="~/Content/Images/zoom.png" /></a>       
    </div>
    <div class="chart-wrapper" style="">
        <div class="chart-inner">
            <div id="propertychartByTypeDiv" class="chartContainer" data-propertytypeqs="@Contants.QueryString.PropertyType" style="border-left: 5px solid #fff; border-top: 5px solid #fff; border-right: 5px solid #fff;">
                <img src="@Url.Content("~/Content/Images/loading_green.gif")" class="loading" />
            </div>
        </div>
    </div>
</div>

@*<div id="propertychartByTypeDiv" class="chartContainer" data-propertytypeqs="@Contants.QueryString.PropertyType" style="border-left: 5px solid #fff; border-top: 5px solid #fff; border-right: 5px solid #fff;">
    <img src="@Url.Content("~/Content/Images/loading_green.gif")" class="loading" />
</div>*@


<!-- Modal -->
<div class="modal fade" id="propertychartByTypeDivModal" style="padding-top:5%; z-index:99999;" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg" style="min-height:500px;">
        <div class="modal-content">
            <div class="modal-header" style="min-height:60px;">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Allocation By Property Type</h4>
            </div>
            <div class="modal-body chartContainer" id="propertychartByTypeDiv2" data-propertytypeqs="@Contants.QueryString.PropertyType">
                <img src="@Url.Content("~/Content/Images/loading_green.gif")" class="loading" />
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>*@
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $(".property-sector-list").kendoDropDownList({
            dataTextField: "Text",
            dataValueField: "Value",
            optionLabel: "ALL",
            filter: "contains",
            dataSource: { transport: { read: ("/api/DefaultApi/List?name=sc") } },
            index: 0,
            change: SectorChangeEventForProperty
        });


        GetPropertyTypeChartData("", function (chartData) {
            //SetTotalProeprties();
            GeneratePropertyTypeChart(chartData);
        });
    });


   // var height = $(".chart-inner").height();
    var width = $(".chart-inner").width();

    function GeneratePropertyTypeChart(chartData) {
        Highcharts.setOptions({
            colors: ['#7CB5EC', '#434348', '#90ED7D', '#F7A35C', '#8085E9', '#F15C80']
           //colors: getColors(chartData)
        });

        $('#propertychartByTypeDiv2').highcharts({
            chart: {
                type: 'pie',
                width: 850,
               //height: 300,
                options3d: {
                    enabled: false,
                    alpha: 20,
                    beta: 0
                }
            },
            credits: {
                enabled: false
            },
            title: {
                text: '',
                verticalAlign: 'top',
                align: 'center',
                x: -70,
                y: 3,
                style: {
                    fontSize: '11px',
                    color: '#606060',
                    fontFamily: "Lucida Sans Unicode",
                    fontWeight: 'bold'

                }
            },
            exporting: {
                enabled: false
            },
            legend: {
                align: 'right',
                verticalAlign: 'top',
                layout: 'vertical',
                y: 25,
                itemStyle: {
                    fontSize: '20px',
                    color: '#606060',
                    fontFamily: "Lucida Sans Unicode",
                    fontWeight: 'normal',
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:13px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">\u25CF</span> {point.name}: <b>{point.percentage:.1f}%</b> of total<br/><span style="color:{point.color}">\u25CF</span> Property Count: <b>{point.y:,.0f}</b> of <b>{point.total:,.0f}<b>'
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    point: {
                        events: {
                            click: function () {
                                location.href = this.options.url;
                            }
                        }
                    },
                    depth: 70,
                    dataLabels: {
                        distance: -30,
                        color: 'black',
                        enabled: true,
                        style: {
                            //fontWeight: 'bold'
                            //color: getColors(chartData)
                        },
                        format: '{point.percentage:.1f}%'

                    },
                    showInLegend: true

                },

            },
            series: [{
                type: 'pie',
                name: 'Property Type',
                data: chartData,

            }],
        });




        $('#propertychartByTypeDiv').highcharts({
            chart: {
                type: 'pie',
                //width: width,
                height: 300,
                options3d: {
                    enabled: false,
                    alpha: 20,
                    beta: 0
                }
            },
            credits: {
                enabled: false
            },
            title: {
                text: '',
                verticalAlign: 'top',
                align: 'center',
                x: -70,
                y: 3,
                style: {
                    fontSize: '11px',
                    color: '#606060',
                    fontFamily: "Lucida Sans Unicode",
                    fontWeight: 'bold'

                }
            },
            exporting: {
                enabled: false
            },
            legend: {
                //align: 'right',
                //verticalAlign: 'top',
                //layout: 'vertical',
                //y: 25,
                //x: 0,
                itemStyle: {
                    fontSize: '11px',
                    color: '#606060',
                    fontFamily: "Lucida Sans Unicode",
                    fontWeight: 'normal',
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:13px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">\u25CF</span> {point.name}: <b>{point.percentage:.1f}%</b> of total<br/><span style="color:{point.color}">\u25CF</span> Property Count: <b>{point.y:,.0f}</b> of <b>{point.total:,.0f}<b>'
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    point: {
                        events: {
                            click: function () {
                                location.href = this.options.url;
                            }
                        }
                    },
                    depth: 100,
                    dataLabels: {
                        distance: -30,
                        color: 'black',
                        enabled: true,
                        style: {
                            //fontWeight: 'bold'
                            //color: getColors(chartData)
                        },
                        format: '{point.percentage:.1f}%'

                    },
                    showInLegend: true

                },

            },
            series: [{
                type: 'pie',
                name: 'Property Type',
                data: chartData,
            }],
        });


    };

    function GetPropertyTypeChartData(sector, onComplete) {
        var deptId = '@Session["DeptId"]';
        chartData = [];
        jQuery.support.cors = true;
        $.ajax({
            url: '/API/Graph/PropertyType?sc=' + sector + '&DeptId=' + deptId,
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                TotalProperties = 0;
                $.each(data, function (i, item) {
                    chartData.push({
                        name: item.PropertyType,
                        y: item.PropertyTypeCount,
                        url: '/Administration/Property/Index?' + GetDataItem("propertychartByTypeDiv", "propertytypeqs") + '=' + item.ID + "&sc=" + GetSeletedSector(),
                    })
                    TotalProperties += item.PropertyTypeCount;
                });
                onComplete(chartData);

            },
            error: function (x, y, z) {
                //alert(x + '\n' + y + '\n' + z);
            }
        });
    }

    function SectorChangeEventForProperty() {
        //alert("Sector change Event");
    }


</script>
