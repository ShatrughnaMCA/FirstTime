@using NoidaAuthority.PMS.Common;

<div id="div-revenue-chart">
    <h5 class="chrt_title">Revenue by Year</h5>
    <div class="btn-group new_btn_bx" id="RevenueChartDropdown" data-value="0">
        <div class="revenue-sector-list"></div>
        &nbsp;<a class="icn_zoom" data-toggle="modal" data-target="#revenuechartsDivModal" href="#"><img title="Zoom In" src="~/Content/Images/zoom.png" /></a>
    </div>
    <div class="chart-wrapper">
        <div class="chart-inner">
            <div id="revenuechartsDiv" class="chartContainer" data-yearqs="@Contants.QueryString.Year" data-propertytypeqs="@Contants.QueryString.PropertyType" style="border-bottom: 5px solid #fff; border-left: 1px solid #fff; border-right: 5px solid #fff; border-top: 1px solid #fff; ">
                <img src="@Url.Content("~/Content/Images/loading_green.gif")" class="loading" />
            </div>
        </div>
    </div>
</div>


@*<div id="revenuechartsDiv" class="chartContainer" data-yearqs="@Contants.QueryString.Year" data-propertytypeqs="@Contants.QueryString.PropertyType" style="border-bottom: 5px solid #fff; border-left: 1px solid #fff; border-right: 5px solid #fff; border-top: 1px solid #fff; ">
    <img src="@Url.Content("~/Content/Images/loading_green.gif")" class="loading" />
</div>*@

<!-- Modal -->
<div class="modal fade" id="revenuechartsDivModal" style="padding-top:2%; z-index:99999;" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg" style="min-height:500px;">
        <div class="modal-content">
            <div class="modal-header" style="min-height:60px;">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Revenue by Year</h4>
            </div>
            <div class="modal-body chartContainer" id="revenuechartsDiv2" data-propertytypeqs="@Contants.QueryString.PropertyType">
                <img src="@Url.Content("~/Content/Images/loading_green.gif")" class="loading" />
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>*@
        </div>
    </div>
</div>



<script>
    $(document).ready(function () {
        $(".revenue-sector-list").kendoDropDownList({
            dataTextField: "Text",
            dataValueField: "Value",
            optionLabel: "ALL",
            filter: "contains",
            dataSource: { transport: { read: ("/api/DefaultApi/List?name=sc") } },
            index: 0,
            change: SectorChangeEventForRevenue
        });


        GetRevenueChartData("", function () {
            CreateRevenueChart();
        });
    });


    //var height = $(".chart-inner").height();
    var width = $(".chart-inner").width();

    XSeriesData = [];
    YSeriesData = [];
    revenueChartDrilldownSeries = [];
    function CreateRevenueChart() {
        Highcharts.setOptions({
            colors: ['#F15C80', '#8085E9', '#7CB5EC', '#F7A35C', '#90ED7D', '#434348']
        });

        //for pop up zoom
        $('#revenuechartsDiv2').highcharts({

            chart: {
                type: 'column',
                width: 850,
                height: 650,
                options3d: {
                    enabled: true,
                    alpha: 15,
                    beta: 5,
                    viewDistance: 25,
                    depth: 60
                },
                marginTop: 30,
            },
            credits: {
                enabled: false
            },

            title: {
                text: '',
                verticalAlign: 'top',
                align: 'center',
                y: 2,
                style: {
                    fontSize: '11px',
                    color: '#606060',
                    fontFamily: "Lucida Sans Unicode",
                    fontWeight: 'bold'
                }
            },
            exporting: {
                enabled: false
            },
            legend: {
                align: 'right',
                verticalAlign: 'top',
                layout: 'vertical',
                y: 0,
                x: 0,
                itemStyle: {
                    fontSize: '20px',
                    color: '#606060',
                    fontFamily: "Lucida Sans Unicode",
                    fontWeight: 'normal',
                }
            },
            xAxis: {
                //categories: XSeriesData
                type: 'category'
            },

            yAxis: {

                title: {
                    text: 'Revenue (in ₹)'
                },
                labels: {
                    format: '{value:,.0f} Lacs'
                }
            },

            tooltip: {
                headerFormat: '',
                pointFormat: '{point.name}<br/><span style="color:{series.color}">\u25CF</span> {series.name}: <b>₹ {point.y:,.2f} Lacs</b> of <b>₹ {point.stackTotal:,.2f} Lacs</b><br/><span style="color:{series.color}">\u25CF</span> Percentage: <b>{point.percentage:.1f}%</b> of total',
            },

            plotOptions: {
                column: {
                    stacking: 'normal',
                    depth: 40,
                    point: {
                        events: {
                            click: function () {
                                location.href = this.options.url;
                            }
                        }
                    },
                },

            },
            series: YSeriesData,
            drilldown: {
                _animation: {
                    duration: 2000
                },
                activeAxisLabelStyle: {
                    textDecoration: 'none',
                    fontSize: '11px',
                    color: '#606060',
                    fontFamily: "Lucida Sans Unicode",
                    fontWeight: 'normal',
                },
                drillUpButton: {
                    relativeTo: 'spacingBox',
                    position: {
                        y: 0,
                        x: 0
                    },
                },
                series: revenueChartDrilldownSeries
            }
        });


        $('#revenuechartsDiv').highcharts({

            chart: {
                type: 'column',
                //width: width,
                height: 300,
                options3d: {
                    enabled: true,
                    alpha: 15,
                    beta: 5,
                    viewDistance: 25,
                    depth: 60
                },
                marginTop: 30,
            },
            credits: {
                enabled: false
            },
            title: {
                text: '',
                verticalAlign: 'top',
                align: 'center',
                y: 2,
                style: {
                    fontSize: '11px',
                    color: '#606060',
                    fontFamily: "Lucida Sans Unicode",
                    fontWeight: 'bold'
                }
            },
            exporting: {
                enabled: false
            },
            legend: {
                //align: 'right',
                //verticalAlign: 'top',
                //layout: 'vertical',
                //y: 50,
                itemStyle: {
                    fontSize: '11px',
                    color: '#606060',
                    fontFamily: "Lucida Sans Unicode",
                    fontWeight: 'normal',
                }
            },
            xAxis: {
                //categories: XSeriesData
                type: 'category'
            },

            yAxis: {

                title: {
                    text: 'Revenue (in ₹)'
                },
                labels: {
                    format: '{value:,.0f} Lacs'
                }
            },

            tooltip: {
                headerFormat: '',
                pointFormat: '{point.name}<br/><span style="color:{series.color}">\u25CF</span> {series.name}: <b>₹ {point.y:,.2f} Lacs</b> of <b>₹ {point.stackTotal:,.2f} Lacs</b><br/><span style="color:{series.color}">\u25CF</span> Percentage: <b>{point.percentage:.1f}%</b> of total',
            },

            plotOptions: {
                column: {
                    stacking: 'normal',
                    depth: 40,
                    point: {
                        events: {
                            click: function () {
                                location.href = this.options.url;
                            }
                        }
                    },
                },

            },
            series: YSeriesData,
            drilldown: {
                _animation: {
                    duration: 2000
                },
                activeAxisLabelStyle: {
                    textDecoration: 'none',
                    fontSize: '11px',
                    color: '#606060',
                    fontFamily: "Lucida Sans Unicode",
                    fontWeight: 'normal',
                },
                drillUpButton: {
                    relativeTo: 'spacingBox',
                    position: {
                        y: 0,
                        x: 0
                    },
                },
                series: revenueChartDrilldownSeries
            }
        });
    };

    function GetRevenueChartData(sector, onComplete) {
        var deptId = '@Session["DeptId"]';
        XSeriesData = [];
        YSeriesData = [];
        jQuery.support.cors = true;
        $.ajax({
            url: '/API/Graph/PropertyRevenue?sc=' + sector+'&DeptId='+deptId,
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                //  alert("success");
                $.each(data, function (i, item) {
                    if ($.inArray(item.Year, XSeriesData) < 0) {
                        XSeriesData.push(
                           item.Year
                        );
                    }
                    var result = SearchObject(YSeriesData, item.PropertyType);
                    if (result == null) {
                        YSeriesData.push({
                            name: item.PropertyType,
                            data: [{
                                y: item.Revenue,
                                name: item.Year,
                                drilldown: item.Year + item.PropertyType,
                                //url: '/Property/Revenue?' + GetDataItem("revenuechartsDiv", "yearqs") + '=' + item.Year + '&' + GetDataItem("revenuechartsDiv", "propertytypeqs") + '=' + item.ID + "&sc=" + GetSeletedSectorForRevenue(),// + "&head=" + item.RECIEPT_HEAD_NAME,
                                //Changes done when changing Dropdown for this chart from Sectors to FYs.
                                url: '/Administration/Property/Revenue?' + GetDataItem("revenuechartsDiv", "yearqs") + '=' + item.Year + '&' + GetDataItem("revenuechartsDiv", "propertytypeqs") + '=' + item.ID + "&sc=0",// + "&head=" + item.RECIEPT_HEAD_NAME,
                            }],
                            stack: 'property'
                        });
                    }
                    else {
                        result.data.push({
                            y: item.Revenue,
                            name: item.Year,
                            drilldown: item.Year + item.PropertyType,
                            //url: '/Property/Revenue?' + GetDataItem("revenuechartsDiv", "yearqs") + '=' + item.Year + '&' + GetDataItem("revenuechartsDiv", "propertytypeqs") + '=' + item.ID + "&sc=" + GetSeletedSectorForRevenue(),
                            //Changes done when changing Dropdown for this chart from Sectors to FYs.
                            url: '/Administration/Property/Revenue?' + GetDataItem("revenuechartsDiv", "yearqs") + '=' + item.Year + '&' + GetDataItem("revenuechartsDiv", "propertytypeqs") + '=' + item.ID + "&sc=0",
                        });
                    }
                });
                $.each(YSeriesData, function (i, ydata) {

                    $.each(ydata.data, function (i, innerData) {


                    });
                });
                GetRevenueChartDrilldownData(sector, onComplete);

            },
            error: function (x, y, z) {
                //alert(x + '\n' + y + '\n' + z);
            }
        });
    }
    function GetRevenueChartDrilldownData(sector, onComplete) {
        revenueChartDrilldownSeries = [];

        $.ajax({
            url: '/API/Graph/RevenueSourceType?sc=' + sector,
            type: 'GET',
            dataType: 'json',
            success: function (data) {

                $.each(data, function (i, item) {
                    var result = SearchObject(revenueChartDrilldownSeries, item.FiscalYear + " " + item.Department);
                    if (result == null) {
                        result = {
                            id: item.FiscalYear + item.Department,
                            name: item.FiscalYear + " " + item.Department,
                            data: [],

                        }
                        revenueChartDrilldownSeries.push(result);
                    }
                    result.data.push({
                        y: item.Revenue,
                        name: item.RECIEPT_HEAD_NAME,
                        //url: '/Property/Revenue?' + GetDataItem("revenuechartsDiv", "yearqs") + '=' + item.FiscalYear + '&' + GetDataItem("revenuechartsDiv", "propertytypeqs") + '=' + item.PropertyTypeId + "&sc=" + GetSeletedSectorForRevenue() + "&head=" + item.RECIEPT_HEAD_NAME,
    //Changes done when changing Dropdown for this chart from Sectors to FYs.
                        url: '/Administration/Property/Revenue?' + GetDataItem("revenuechartsDiv", "yearqs") + '=' + item.FiscalYear + '&' + GetDataItem("revenuechartsDiv", "propertytypeqs") + '=' + item.PropertyTypeId + "&sc=0" + "&head=" + item.RECIEPT_HEAD_NAME,
                    });

                });
                // debugger;
                onComplete();

            },
            error: function (x, y, z) {
                //alert(x + '\n' + y + '\n' + z);
            }
        });
    }

    function SectorChangeEventForRevenue() {
        alert("sector change event");
    }
   
</script>
